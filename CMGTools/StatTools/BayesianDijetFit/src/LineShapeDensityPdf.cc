#include "StatTools/BayesianDijetFit/interface/LineShapeDensityPdf.h"
#include "Math/Interpolator.h"
#include "TH1F.h"
#include "TFile.h"
#include "TArrayD.h"
#include "TObjArray.h"
#include <iostream>

//Resonance Shape of any mass value using Interpolation technique 
//Author: Sertac Ozturk
// sertac@fnal.gov,  sertac.ozturk@cern.ch

// global variables -- shame on you, Sertac! ;)

double mass;
TObjArray* vy = new TObjArray(12);
TObjArray* vyBH = new TObjArray(12);

//================================= 1 jets tag Summer 11 D6T shape FatJets =======================================//

// 0.75TeV q*->qW
double Qstar_qW_75TeV_ak5_fat[50] = {8.17480353688, 8.9668738114, 9.84620356688, 10.8235923838, 11.9113269066, 13.1234068425, 14.4758086146, 15.9867935103, 17.6772685102, 19.5712096205, 21.6961595153, 24.0838137203, 26.7707125236, 29.7990594246, 33.217691379, 37.0832315736, 41.4614622265, 46.4289632765, 52.0750732162, 58.5042412635, 65.8388562252, 74.2226576535, 83.8248603477, 94.8451553458, 107.519791162, 122.128990594, 139.006024153, 158.54834521, 181.231299941, 207.625064272, 238.415640179, 274.430977869, 316.673596059, 359.629864106, 377.647889899, 364.842091707, 324.271942009, 265.155334605, 199.470155653, 138.051790946, 94.0481584868, 67.2110349309, 49.8548719761, 38.0995383062, 29.8350176925, 23.8431730884, 19.3854664013, 15.9954572063, 13.3681729936, 11.2981947838};

// 0.75TeV q*->qZ
double Qstar_qZ_75TeV_ak5_fat[50] = {37.9726121368, 37.9726128306, 37.9726135651, 37.9726143455, 37.9726151779, 37.9726160697, 37.97261703, 37.9726180702, 37.9726192048, 37.9726204529, 37.9726218394, 37.9726233991, 37.9726251815, 37.9726272609, 37.9726297565, 37.9726328776, 37.9726370466, 37.9726433454, 37.9726566496, 44.4741703755, 60.7956727097, 80.7274645902, 104.124706167, 130.457813848, 158.77065477, 187.695649607, 215.537087072, 240.421688699, 260.500828553, 274.175349819, 280.30544567, 278.36747857, 268.52782102, 251.619277782, 229.024723126, 202.490500436, 173.904480839, 145.07772021, 117.564040598, 92.5405587509, 70.757676333, 52.5531604565, 37.9187743402, 36.6439507266, 36.396834327, 36.251571165, 36.148440207, 36.0684722088, 36.0031746128, 35.9480059409};


// 1.5 TeV q*->qW
double Qstar_qW_15TeV_ak5_fat[50] = {3.87898199876, 4.17124689274, 4.4937725914, 4.85059115693, 5.24639826721, 5.68668441284, 6.17789662996, 6.72763901002, 7.34492277731, 8.04048017019, 8.827161057, 9.72043767561, 10.739051853, 11.9058516425, 13.2488821592, 14.8028209988, 16.6108858216, 18.7273964508, 21.221255633, 24.1807366775, 27.7201575518, 31.9893215341, 37.1870858893, 43.5812078351, 51.5379372054, 61.567095805, 74.3924032196, 91.0641582774, 113.145317372, 143.029524355, 184.506579726, 243.815168063, 331.711805794, 442.384244489, 506.247648788, 494.038873751, 411.144005475, 291.78404321, 176.589082091, 102.444256114, 64.3320460884, 42.8640258861, 29.8997364325, 21.6325457323, 16.124624772, 12.3205415012, 9.61290196759, 7.63576654068, 6.15995998943, 5.03711611136};

// 1.5 TeV q*->qZ
double Qstar_qZ_15TeV_ak5_fat[50] = {2.77280087062, 3.05467168092, 3.37222806769, 3.73091913969, 4.13717496553, 4.59861126471, 5.12428296274, 5.72499981824, 6.41372133897, 7.20605356941, 8.12087756516, 9.18114918884, 10.4149232966, 11.8566739132, 13.5490077667, 15.5449047236, 17.910669911, 20.7298556429, 24.1085173207, 28.1823225817, 33.1262625497, 39.1680581941, 46.6068777819, 55.8397877634, 67.3996222754, 82.0099676703, 100.666220124, 124.757068513, 156.249867471, 197.979121483, 254.105243027, 330.86170293, 437.804519951, 554.202803767, 605.468632396, 569.985210024, 462.364554756, 323.187450222, 194.658535408, 111.157977167, 69.6152024349, 46.659024962, 32.8974426519, 24.1232539965, 18.2520302078, 14.1674523982, 11.2333992831, 9.06853871229, 7.43442066506, 6.17651943665};


// 3TeV q*->qW
double Qstar_qW_3TeV_ak5_fat[50] = {5.97602571463, 6.2407648073, 6.52539834203, 6.832072327, 7.16323888465, 7.52171125056, 7.91073082636, 8.33404943753, 8.79603091345, 9.30177741621, 9.85728773807, 10.4696572679, 11.1473328004, 11.9004402851, 12.7412106826, 13.6845394037, 14.7487300618, 15.9564962443, 17.3363302555, 18.9244029638, 20.7672472603, 22.9256227093, 25.4802038532, 28.5401610291, 32.2564715948, 36.8432431547, 42.6131684908, 50.0391189786, 59.866894179, 73.3351767358, 92.6400097591, 122.020635899, 168.310397342, 207.062867996, 215.522321593, 189.793371136, 141.406240116, 89.1363531183, 47.5378898563, 21.4498218861, 8.18853542496, 2.64476766071, 0.72271583644, 0.167088426181, 0.0326831507599, 0.00540879121876, 0.000757312752745, 8.97116974757e-05, 8.99128222904e-06, 7.62417642759e-07};

// 3TeV q*->qZ
double Qstar_qZ_3TeV_ak5_fat[50] = {6.38002727156, 6.6802247353, 7.00431246175, 7.35501857082, 7.73548338799, 8.14933797794, 8.60080095586, 9.09479865876, 9.63711541985, 10.2345829806, 10.8953212711, 11.6290473048, 12.4474753898, 13.3648412319, 14.3985963106, 15.5703395891, 16.9070851667, 18.4430135546, 20.221932292, 22.3007987138, 24.7548703182, 27.685414723, 31.2315647658, 35.5891151678, 41.0414014374, 48.0121776194, 57.1607402638, 69.5635495073, 87.087448179, 113.231585005, 155.274916277, 219.801704795, 278.0340464, 310.264028225, 305.443857463, 265.275955518, 203.25016269, 137.382191186, 81.9212364504, 43.0952178906, 19.999916653, 8.18830127425, 2.95750824221, 0.942376909914, 0.264904802664, 0.0656933713483, 0.0143720854616, 0.00277386010562, 0.000472297710792, 7.09436696794e-05};




//================================= 2 jets tag Summer 11 D6T shape FatJets =======================================//

// 1 TeV G*->WW
double RSGraviton_WW_1TeV_ak5_fat[50] = {0.576822085037, 0.584771503639, 0.593146363322, 0.601987721313, 0.611342512476, 0.621264689366, 0.631816646747, 0.643071018878, 0.655112971267, 0.668043157017, 0.681981579533, 0.697072711278, 0.713492384529, 0.731457232272, 0.751237882176, 0.773177815991, 0.797721032794, 0.825453858956, 0.857170397445, 0.893979353734, 0.937487449002, 0.990134701254, 1.05585828293, 1.141553523, 1.26080109575, 1.44577319968, 1.80412926634, 3.21316193428, 7.27485326899, 14.8235905713, 27.1844238178, 44.8667283037, 66.6447923781, 89.0934106927, 107.192030789, 116.06919192, 113.112075419, 99.2061348218, 78.3079105168, 55.6301576314, 35.5674306482, 20.465965814, 10.5986254212, 4.93974341334, 2.45472183858, 2.45465276765, 2.45462996662, 2.4546159204, 2.45460574144, 2.45459775362};

// 1 TeV W'->WZ
double RSGraviton_WZ_1TeV_ak5_fat[50] = {0.992518893909, 1.07049699671, 1.15703823555, 1.25336645298, 1.360923399, 1.48141566863, 1.61687361749, 1.76972582041, 1.94289386145, 2.13991394612, 2.36509422084, 2.62372009037, 2.92232472706, 3.26904911475, 3.67412654077, 4.15054231111, 4.7149436525, 5.38891229781, 6.20077160302, 7.18819585641, 8.40204765202, 9.91213703854, 11.8160622623, 14.2531283482, 17.4268932309, 21.6428905284, 27.3741306786, 35.3798322538, 46.9317758883, 64.2725509875, 91.6133743795, 137.512385238, 213.054573867, 293.047521794, 351.299866508, 367.037685178, 334.222797853, 265.249286559, 183.470024603, 110.603470574, 58.1119074668, 31.4955501406, 19.7475204374, 13.5415536059, 9.86665432305, 7.51114857434, 5.91075128773, 4.7736932936, 3.93672891233, 3.30270369163};

// 1 TeV G*->ZZ
double RSGraviton_ZZ_1TeV_ak5_fat[50] = {0.709067343464, 0.772155790005, 0.842865435518, 0.922374031156, 1.01208351664, 1.11367123633, 1.22915493518, 1.36097583968, 1.51210567358, 1.68618563439, 1.88770845553, 2.12225914462, 2.39683650377, 2.72028717264, 3.10389838953, 3.56221768921, 4.1142018816, 4.78485149932, 5.60757355925, 6.6276579918, 7.90749306893, 9.53455995805, 11.633984531, 14.3887806008, 18.0735021213, 23.1121485641, 30.1818265129, 40.407051968, 55.744175701, 79.7926822469, 118.868213088, 167.364905137, 214.923802475, 251.724851787, 268.89896486, 261.983310243, 232.79817883, 188.671798824, 139.46199067, 94.0212862538, 57.8119974449, 33.979601123, 21.5801582602, 14.5948317366, 10.351402108, 7.62028933759, 5.78029997534, 4.4938390251, 3.56634966037, 2.88016694987};

// 1 TeV G*->ZZ k/MPL = 0.1
double RSGraviton_ZZ_01_1TeV_ak5_fat[50] = {0.308201508778, 0.337736971309, 0.371049018737, 0.408748772785, 0.4515682755, 0.500389051626, 0.556278584782, 0.620537245448, 0.694759141299, 0.780911682267, 0.881440547464, 0.999409489443, 1.13868844882, 1.30420946484, 1.50231895292, 1.74126886732, 2.03191104294, 2.38869364393, 2.83111484193, 3.38588204633, 4.0901833285, 4.99675382408, 6.18191583796, 7.75869155765, 9.89885810133, 12.8713659102, 17.1120059529, 23.355772179, 32.9024950809, 48.1859073643, 73.2882501378, 103.771837713, 132.581556624, 152.842865112, 158.988487249, 149.226046979, 126.381074265, 96.5779318808, 66.5935566212, 41.4328654708, 23.2603465028, 11.7827276852, 7.56841560596, 6.08837428031, 5.26377445269, 4.71781033756, 4.32116463392, 4.0156714615, 3.77072550511, 3.56846023165};


// 1.5 TeV G*->WW
double RSGraviton_WW_15TeV_ak5_fat[50] = {0.277435417542, 0.290103223434, 0.30378663289, 0.318604508696, 0.334694316026, 0.352215821659, 0.37135569737, 0.392333292979, 0.415407936557, 0.440888248646, 0.469144141256, 0.500622437815, 0.535867438804, 0.57554833613, 0.620496255439, 0.671755058957, 0.730652177157, 0.798899188412, 0.878737589909, 0.97315498096, 1.08621414361, 1.22356915269, 1.39330321259, 1.60734475126, 1.88397815575, 2.25255984276, 2.76303005501, 3.50690654472, 4.66944364094, 6.68226957134, 10.7940999816, 22.2516934189, 48.3231177029, 86.4859580019, 127.566027127, 155.068374908, 155.349627601, 128.261399121, 87.2731205941, 48.9399828534, 25.7794430901, 14.8565732054, 9.16600674572, 5.96388717092, 4.0493354217, 2.84709915402, 2.0609882395, 1.52921342701, 1.15893262518, 0.89459493903};

// 1.5 TeV W'->WZ
double RSGraviton_WZ_15TeV_ak5_fat[50] = {2.34674369466, 2.46421944365, 2.5914184241, 2.72948385917, 2.8797358208, 3.0437056012, 3.22317822461, 3.4202453986, 3.63737196618, 3.87747997543, 4.14405596143, 4.44128913025, 4.77425114561, 5.14913260517, 5.57355778651, 6.05700901447, 6.61140698183, 7.25191678353, 7.99808688708, 8.87548964207, 9.91813527544, 11.172110682, 12.7012164802, 14.5959774292, 16.9885761935, 20.0786769424, 24.1803880825, 29.8130354308, 37.8903411627, 50.1543011773, 70.3043064776, 107.501010441, 180.082532628, 265.471631467, 332.915585715, 355.156376035, 322.310596524, 248.827875591, 163.415391671, 91.2969704479, 43.3899603474, 17.5425054376, 6.033418715, 1.7652441953, 0.439355024853, 0.0930241869985, 0.0167550469138, 0.00256723067264, 0.00033462132722, 3.71032388078e-05};

// 1.5 TeV G*->ZZ
double RSGraviton_ZZ_15TeV_ak5_fat[50] = {0.0963980715196, 0.108082610818, 0.121528343231, 0.137055504512, 0.155053066706, 0.175995875148, 0.200466686787, 0.229184702271, 0.263042767409, 0.303156241939, 0.350927704314, 0.40813334521, 0.477039350684, 0.560560176444, 0.662475974401, 0.787734515474, 0.942875311886, 1.13663282289, 1.38080587255, 1.69152892247, 2.09116011412, 2.61113314178, 3.29634514702, 4.21204556439, 5.45489399151, 7.17115048495, 9.58742441977, 13.0642574623, 18.1927474301, 25.9756777968, 38.1824656756, 58.0813302895, 91.8302627396, 133.88269304, 167.641116905, 180.282737971, 166.511885275, 132.08509846, 89.9870270301, 52.6530431686, 26.4596773128, 13.2976723504, 8.50588193042, 6.13874802436, 4.7476641514, 3.84043948499, 3.20605272497, 2.73969143677, 2.38368323533, 2.1037984449};

// 1.5 TeV G*->ZZ k/MPL = 0.1
double RSGraviton_ZZ_01_15TeV_ak5_fat[50] = {0.184153302453, 0.202135133774, 0.222424430556, 0.245392120851, 0.2714814963, 0.301224964644, 0.335265328715, 0.374383001338, 0.419531066409, 0.471880798634, 0.53288124927, 0.604337930039, 0.68851769177, 0.788289922645, 0.90731869232, 1.05032725502, 1.2234667143, 1.43483682117, 1.69523249158, 2.01923099744, 2.42680301505, 2.94574586266, 3.61543655195, 4.4927569399, 5.66169421099, 7.24935653918, 9.45358576925, 12.5923874073, 17.1963281069, 24.1901740943, 35.2718372179, 53.7614074569, 86.6769621319, 136.550675408, 183.323513298, 209.442442469, 203.626088647, 168.470687297, 118.614417157, 71.067790568, 36.2351740411, 16.1581333024, 10.3570227755, 8.08138795611, 6.79813110603, 5.9523885949, 5.34351439624, 4.8793749871, 4.51108244992, 4.21002342664};


// 2 TeV G*->WW
double RSGraviton_WW_2TeV_ak5_fat[50] = {0.338931071484, 0.355073672899, 0.372527633076, 0.391446470522, 0.412007553351, 0.4344167822, 0.458914398724, 0.485782243559, 0.515352897343, 0.548021291414, 0.584259590696, 0.624636459987, 0.66984227247, 0.720722478217, 0.778322336901, 0.843947722289, 0.919249043402, 1.00633904068, 1.10796125956, 1.22773610771, 1.37052880727, 1.54301456419, 1.75457369223, 2.01876051333, 2.35581603687, 2.79718343645, 3.39412121104, 4.23538818427, 5.48711592633, 7.49450522732, 11.0897372394, 18.8001142115, 39.5426613651, 73.7405337611, 110.861308651, 134.365281886, 131.288738985, 103.419213132, 65.6762464563, 34.9654365605, 18.5708112934, 10.0375403262, 5.51592911861, 3.07912742404, 1.74464009456, 1.00260732463, 0.583987941172, 0.344546063557, 0.205779847991, 0.124345425798};

// 2 TeV W'->WZ
double RSGraviton_WZ_2TeV_ak5_fat[50] = {4.41089314487, 4.56365039671, 4.72671572902, 4.90114553336, 5.088143944, 5.28908940965, 5.50556718435, 5.73940932894, 5.99274432189, 6.26805907448, 6.5682771114, 6.89685803645, 7.2579253377, 7.65643238266, 8.09838055854, 8.59110964201, 9.14368980789, 9.76745916836, 10.4767737421, 11.2900742384, 12.2314368613, 13.3328840158, 14.6379256815, 16.2071664383, 18.1275270551, 20.5281095552, 23.609014207, 27.6972963507, 33.3651868163, 41.7090097241, 55.1151110562, 79.8943724603, 134.8163435, 206.372064604, 261.825294758, 275.311669739, 239.93299035, 173.303622336, 103.747500145, 51.4754282847, 21.1677463903, 9.3453221641, 5.88663516903, 4.27993119534, 3.35474336505, 2.75443903409, 2.33397084391, 2.02333055954, 1.78461730406, 1.59554037739};

// 2 TeV G*->ZZ
double RSGraviton_ZZ_2TeV_ak5_fat[50] =  {0.057065453287, 0.0648919532732, 0.0740223299222, 0.0847142250931, 0.0972846083901, 0.112125484938, 0.129724334712, 0.150690891315, 0.175792480373, 0.206001009656, 0.242555957033, 0.287049524073, 0.341542798252, 0.408725740366, 0.492139787886, 0.596490963594, 0.728095427592, 0.895521423839, 1.11052661126, 1.38944649138, 1.75528315091, 2.24090073614, 2.89400402371, 3.78505083991, 5.02010399059, 6.76221210085, 9.26793305772, 12.9515860332, 18.5020605897, 27.1031784202, 40.8672323765, 63.7299265019, 103.403405229, 157.351447368, 197.478179754, 204.354458951, 174.367584193, 122.677244413, 71.1670400732, 34.0873847027, 17.0363617721, 9.9017551018, 6.34024336313, 4.34305442295, 3.12657354325, 2.33834319475, 1.80245843474, 1.42385908362, 1.14783687908, 0.941255922359};

// 2 TeV G*->ZZ k/MPL = 0.1
double RSGraviton_ZZ_01_2TeV_ak5_fat[50] = {0.310242698097, 0.33555479791, 0.363719328769, 0.395151678469, 0.430342237661, 0.46987272671, 0.514436721892, 0.564865638049, 0.622161857815, 0.687541300571, 0.762488572989, 0.848829050764, 0.948823980525, 1.06529722786, 1.20180604867, 1.36287388979, 1.55431180609, 1.78366838947, 2.06086913313, 2.39914006184, 2.81636636353, 3.33713121033, 3.99584390924, 4.84165977974, 5.94643659574, 7.41801441234, 9.42319484911, 12.229195946, 16.2821680466, 22.3647354997, 31.9348709837, 47.9199982993, 76.7908639784, 134.234470552, 209.149660752, 255.792359187, 245.558664721, 185.03771277, 109.446665026, 52.769670282, 27.8063106142, 16.3460882792, 10.382744198, 6.98669050844, 4.91622675512, 3.58474051595, 2.69092359159, 2.0693589807, 1.62416596114, 1.29720108095};



// 3 TeV G*->WW
double RSGraviton_WW_3TeV_ak5_fat[50] = {0.338931071484, 0.355073672899, 0.372527633076, 0.391446470522, 0.412007553351, 0.4344167822, 0.458914398724, 0.485782243559, 0.515352897343, 0.548021291414, 0.584259590696, 0.624636459987, 0.66984227247, 0.720722478217, 0.778322336901, 0.843947722289, 0.919249043402, 1.00633904068, 1.10796125956, 1.22773610771, 1.37052880727, 1.54301456419, 1.75457369223, 2.01876051333, 2.35581603687, 2.79718343645, 3.39412121104, 4.23538818427, 5.48711592633, 7.49450522732, 11.0897372394, 18.8001142115, 39.5426613651, 73.7405337611, 110.861308651, 134.365281886, 131.288738985, 103.419213132, 65.6762464563, 34.9654365605, 18.5708112934, 10.0375403262, 5.51592911861, 3.07912742404, 1.74464009456, 1.00260732463, 0.583987941172, 0.344546063557, 0.205779847991, 0.124345425798};

// 3 TeV W'->WZ
double RSGraviton_WZ_3TeV_ak5_fat[50] = {9.4196072785, 9.41960730321, 9.41960732881, 9.41960735537, 9.41960738297, 9.41960741168, 9.4196074416, 9.41960747283, 9.41960750551, 9.41960753976, 9.41960757575, 9.41960761366, 9.41960765372, 9.41960769616, 9.41960774131, 9.41960778953, 9.41960784127, 9.41960789707, 9.41960795764, 9.41960802387, 9.41960809692, 9.41960817836, 9.41960827036, 9.4196083761, 9.4196085004, 9.41960865118, 9.41960884289, 9.41960910637, 9.41960953005, 9.41961073379, 12.0486694683, 15.1794696479, 17.348787798, 17.9877441253, 16.9191794442, 14.4369988298, 11.1755672233, 7.84796863247, 4.9996542416, 2.88946682769, 2.0545400286, 1.90444912389, 1.82495736686, 1.77138148292, 1.73123187284, 1.69926367756, 1.67278673143, 1.65024139764, 1.63064465008, 1.61333796068};

// 3 TeV G*->ZZ
double RSGraviton_ZZ_3TeV_ak5_fat[50] =  {0.657509466794, 0.694549501729, 0.734859581698, 0.778839379987, 0.826951854408, 0.879735705168, 0.937820797859, 1.00194738801, 1.07299025918, 1.15198926688, 1.24018831151, 1.33908551269, 1.45049842918, 1.57664972098, 1.72028093404, 1.88480549865, 2.07451721671, 2.29487853986, 2.55292562619, 2.85784766974, 3.2218319801, 3.66132418868, 4.19895470647, 4.86656771483, 5.71013953618, 6.79806784228, 8.23576395592, 10.1927043177, 12.9558106349, 17.0432233159, 23.471707788, 34.4715196255, 54.8535753922, 77.3376107201, 89.8215805253, 85.9359270489, 67.7287361559, 43.9719077752, 23.5169922962, 10.36077821, 3.76016678413, 1.12415441911, 0.276852829855, 0.0561663359901, 0.00938657926321, 0.00129223869553, 0.000146548798821, 1.36907082656e-05, 1.05359499992e-06, 6.67921798166e-08};

// 3 TeV G*->ZZ k/MPL = 0.1
double RSGraviton_ZZ_01_3TeV_ak5_fat[50] = {0.693361663383, 0.73547217345, 0.781411893752, 0.831651417783, 0.886735120012, 0.947295378828, 1.01407008592, 1.0879243357, 1.16987747017, 1.26113703887, 1.36314176166, 1.47761631642, 1.60664180565, 1.7527472234, 1.91902935789, 2.10931165149, 2.32835711401, 2.58215727274, 2.87832969592, 3.22667310378, 3.63995534792, 4.13505237322, 4.73462790261, 5.4696667477, 6.38339313297, 7.53750684115, 9.02243744978, 10.9748525985, 13.6088953884, 17.2748938228, 22.5768371324, 30.6262614823, 43.6469547609, 66.6104603811, 106.804146727, 137.805594049, 136.806960283, 104.49900426, 61.415603525, 27.7720480971, 9.66272692886, 2.58674797116, 0.532808495335, 0.0844404963446, 0.010296580686, 0.000966046184708, 6.97373379456e-05, 3.87342769784e-06, 1.65534360459e-07, 5.44306436262e-09};







//================================= HLT Summer 11 D6T shape PFJets =======================================//


double finalResults_QstarToJJ_M_700_qg_M_PFJet1PFJet2_shifted_2 [50] = { 99.0,  138.0,  163.0,  182.0,  245.0,  320.0,  332.0,  428.0,  487.0,  536.0,  610.0,  731.0,  805.0,  961.0,  1048.0,  1155.0,  1223.0,  1364.0,  1616.0,  1680.0,  1812.0,  1904.0,  1977.0,  1942.0,  2239.0,  2296.0,  2417.0,  2611.0,  2867.0,  3132.0,  3381.0,  3750.0,  3736.0,  3740.0,  3317.0,  2826.0,  2138.0,  1532.0,  1014.0,  723.0,  477.0,  378.0,  308.0,  253.0,  208.0,  195.0,  157.0,  149.0,  128.0,  103.0};
double finalResults_QstarToJJ_M_1200_qg_M_PFJet1PFJet2_shifted_3 [50] = { 190.0,  190.0,  222.0,  257.0,  263.0,  347.0,  355.0,  411.0,  460.0,  584.0,  598.0,  664.0,  778.0,  907.0,  1058.0,  1137.0,  1234.0,  1378.0,  1498.0,  1664.0,  1765.0,  1854.0,  1902.0,  2048.0,  2074.0,  2264.0,  2390.0,  2614.0,  2920.0,  3102.0,  3536.0,  3946.0,  4291.0,  4172.0,  3601.0,  2853.0,  1904.0,  1233.0,  794.0,  489.0,  351.0,  264.0,  217.0,  182.0,  139.0,  109.0,  108.0,  96.0,  73.0,  84.0};
double finalResults_QstarToJJ_M_2000_qg_M_PFJet1PFJet2_shifted_4 [50] = { 194.0,  207.0,  257.0,  262.0,  319.0,  328.0,  415.0,  449.0,  461.0,  546.0,  621.0,  754.0,  827.0,  947.0,  1048.0,  1160.0,  1293.0,  1421.0,  1526.0,  1717.0,  1810.0,  1785.0,  1971.0,  2041.0,  2165.0,  2230.0,  2296.0,  2572.0,  2860.0,  3152.0,  3440.0,  4019.0,  4514.0,  4449.0,  3744.0,  2784.0,  1734.0,  908.0,  554.0,  329.0,  201.0,  152.0,  114.0,  103.0,  60.0,  63.0,  52.0,  32.0,  46.0,  25.0};


double finalResults_RSGravitonToJJ_M_700_gg_M_PFJet1PFJet2_shifted_2 [50] = { 135.0,  163.0,  230.0,  209.0,  226.0,  269.0,  320.0,  315.0,  379.0,  382.0,  406.0,  482.0,  491.0,  449.0,  482.0,  507.0,  523.0,  520.0,  520.0,  540.0,  513.0,  547.0,  549.0,  528.0,  607.0,  532.0,  572.0,  567.0,  620.0,  597.0,  598.0,  583.0,  603.0,  502.0,  438.0,  289.0,  237.0,  161.0,  97.0,  87.0,  96.0,  71.0,  70.0,  48.0,  52.0,  43.0,  43.0,  23.0,  42.0,  40.0};
double finalResults_RSGravitonToJJ_M_1200_gg_M_PFJet1PFJet2_shifted_3 [50] = { 125.0,  169.0,  176.0,  174.0,  226.0,  231.0,  230.0,  256.0,  268.0,  316.0,  298.0,  289.0,  317.0,  315.0,  347.0,  341.0,  329.0,  366.0,  377.0,  362.0,  394.0,  380.0,  383.0,  403.0,  378.0,  405.0,  442.0,  411.0,  440.0,  457.0,  441.0,  478.0,  412.0,  398.0,  327.0,  185.0,  112.0,  77.0,  59.0,  35.0,  32.0,  24.0,  25.0,  25.0,  21.0,  16.0,  12.0,  9.0,  11.0,  12.0};
double finalResults_RSGravitonToJJ_M_2000_gg_M_PFJet1PFJet2_shifted_4 [50] = { 91.0,  95.0,  99.0,  96.0,  99.0,  117.0,  115.0,  130.0,  141.0,  154.0,  141.0,  139.0,  168.0,  177.0,  162.0,  191.0,  205.0,  198.0,  217.0,  205.0,  201.0,  222.0,  189.0,  228.0,  206.0,  190.0,  218.0,  222.0,  250.0,  224.0,  237.0,  276.0,  264.0,  230.0,  190.0,  95.0,  63.0,  24.0,  15.0,  6.0,  8.0,  8.0,  6.0,  7.0,  0.0,  2.0,  2.0,  2.0,  1.0,  1.0};



double finalResults_RSGravitonToJJ_M_700_qq_M_PFJet1PFJet2_shifted_2 [50] = { 14.0,  11.0,  11.0,  12.0,  15.0,  21.0,  34.0,  24.0,  32.0,  55.0,  52.0,  58.0,  64.0,  72.0,  75.0,  83.0,  98.0,  119.0,  114.0,  141.0,  157.0,  189.0,  208.0,  215.0,  242.0,  254.0,  267.0,  301.0,  326.0,  398.0,  498.0,  504.0,  608.0,  612.0,  585.0,  513.0,  368.0,  267.0,  145.0,  94.0,  55.0,  31.0,  23.0,  16.0,  16.0,  14.0,  5.0,  12.0,  10.0,  8.0};
double finalResults_RSGravitonToJJ_M_1200_qq_M_PFJet1PFJet2_shifted_3 [50] = { 42.0,  44.0,  51.0,  42.0,  41.0,  48.0,  36.0,  81.0,  61.0,  69.0,  59.0,  90.0,  104.0,  111.0,  135.0,  183.0,  180.0,  204.0,  242.0,  238.0,  305.0,  346.0,  327.0,  329.0,  426.0,  442.0,  438.0,  533.0,  561.0,  669.0,  801.0,  969.0,  1167.0,  1260.0,  1191.0,  952.0,  636.0,  338.0,  193.0,  95.0,  46.0,  36.0,  36.0,  20.0,  13.0,  12.0,  14.0,  9.0,  6.0,  7.0};
double finalResults_RSGravitonToJJ_M_2000_qq_M_PFJet1PFJet2_shifted_4 [50] = { 56.0,  64.0,  52.0,  58.0,  56.0,  65.0,  83.0,  70.0,  80.0,  96.0,  116.0,  133.0,  167.0,  175.0,  196.0,  234.0,  245.0,  292.0,  351.0,  388.0,  417.0,  458.0,  480.0,  554.0,  573.0,  631.0,  620.0,  782.0,  845.0,  1012.0,  1218.0,  1424.0,  1820.0,  1944.0,  1911.0,  1415.0,  831.0,  397.0,  188.0,  84.0,  50.0,  36.0,  14.0,  14.0,  11.0,  3.0,  8.0,  3.0,  6.0,  5.0};
///




//================================= HLT Summer 11 D6T shape PFFatJets =======================================//


double finalResults_QstarToJJ_M_700_qg_M_FatPFJet1FatPFJet2_shifted_2 [50] = { 69.0,  86.0,  110.0,  120.0,  162.0,  204.0,  218.0,  279.0,  307.0,  340.0,  384.0,  442.0,  497.0,  564.0,  610.0,  745.0,  756.0,  776.0,  926.0,  982.0,  1097.0,  1172.0,  1180.0,  1299.0,  1442.0,  1554.0,  1705.0,  1988.0,  2385.0,  2876.0,  3421.0,  4092.0,  4628.0,  4736.0,  4694.0,  4067.0,  3205.0,  2504.0,  1758.0,  1358.0,  958.0,  805.0,  636.0,  537.0,  447.0,  417.0,  338.0,  290.0,  256.0,  217.0};
double finalResults_QstarToJJ_M_1200_qg_M_FatPFJet1FatPFJet2_shifted_3 [50] = { 139.0,  150.0,  170.0,  186.0,  191.0,  223.0,  249.0,  296.0,  304.0,  358.0,  380.0,  399.0,  462.0,  545.0,  624.0,  687.0,  705.0,  786.0,  863.0,  971.0,  1014.0,  1108.0,  1160.0,  1243.0,  1271.0,  1455.0,  1651.0,  1871.0,  2160.0,  2573.0,  3403.0,  4228.0,  5150.0,  5619.0,  5332.0,  4578.0,  3437.0,  2344.0,  1635.0,  1119.0,  838.0,  617.0,  522.0,  402.0,  343.0,  297.0,  261.0,  222.0,  181.0,  156.0};
double finalResults_QstarToJJ_M_2000_qg_M_FatPFJet1FatPFJet2_shifted_4 [50] = { 150.0,  169.0,  182.0,  199.0,  226.0,  250.0,  253.0,  283.0,  312.0,  315.0,  390.0,  459.0,  494.0,  592.0,  627.0,  664.0,  804.0,  769.0,  882.0,  964.0,  1057.0,  1065.0,  1122.0,  1211.0,  1397.0,  1504.0,  1598.0,  1804.0,  2184.0,  2591.0,  3224.0,  4138.0,  5467.0,  6138.0,  5987.0,  4808.0,  3350.0,  2097.0,  1341.0,  899.0,  622.0,  465.0,  355.0,  307.0,  223.0,  179.0,  165.0,  124.0,  97.0,  88.0};


/// D6T summer11 fat-gg ptmin=30GeV  y500 just a copy of y700. Better to replace later
double finalResults_RSGravitonToJJ_M_700_gg_M_FatPFJet1FatPFJet2_shifted_2 [50] = { 86.0,  101.0,  143.0,  152.0,  147.0,  178.0,  211.0,  239.0,  257.0,  287.0,  275.0,  304.0,  355.0,  289.0,  325.0,  342.0,  379.0,  400.0,  385.0,  385.0,  369.0,  420.0,  448.0,  424.0,  435.0,  486.0,  437.0,  504.0,  616.0,  695.0,  736.0,  806.0,  844.0,  779.0,  732.0,  577.0,  448.0,  338.0,  262.0,  203.0,  188.0,  152.0,  150.0,  134.0,  106.0,  101.0,  73.0,  63.0,  74.0,  57.0};
double finalResults_RSGravitonToJJ_M_1200_gg_M_FatPFJet1FatPFJet2_shifted_3 [50] = { 102.0,  124.0,  138.0,  124.0,  150.0,  164.0,  177.0,  193.0,  196.0,  213.0,  192.0,  224.0,  241.0,  218.0,  233.0,  260.0,  221.0,  226.0,  256.0,  256.0,  271.0,  278.0,  284.0,  286.0,  297.0,  293.0,  326.0,  359.0,  396.0,  473.0,  506.0,  593.0,  679.0,  684.0,  581.0,  460.0,  353.0,  251.0,  174.0,  150.0,  117.0,  78.0,  82.0,  59.0,  64.0,  51.0,  37.0,  45.0,  34.0,  39.0};
double finalResults_RSGravitonToJJ_M_2000_gg_M_FatPFJet1FatPFJet2_shifted_4 [50] = { 63.0,  60.0,  63.0,  85.0,  87.0,  90.0,  92.0,  84.0,  106.0,  107.0,  112.0,  106.0,  115.0,  114.0,  109.0,  116.0,  129.0,  138.0,  130.0,  135.0,  154.0,  133.0,  139.0,  169.0,  169.0,  151.0,  192.0,  157.0,  207.0,  215.0,  262.0,  330.0,  403.0,  461.0,  359.0,  307.0,  191.0,  114.0,  80.0,  59.0,  46.0,  50.0,  25.0,  28.0,  21.0,  13.0,  10.0,  15.0,  8.0,  13.0};



/// D6T summer11 fat-gg ptmin=30GeV  y500 just a copy of y700. Better to replace later
double finalResults_RSGravitonToJJ_M_700_qq_M_FatPFJet1FatPFJet2_shifted_2 [50] = { 10.0,  6.0,  8.0,  8.0,  6.0,  12.0,  28.0,  16.0,  30.0,  34.0,  32.0,  36.0,  54.0,  49.0,  37.0,  57.0,  57.0,  64.0,  73.0,  94.0,  77.0,  104.0,  121.0,  138.0,  171.0,  178.0,  189.0,  226.0,  272.0,  359.0,  465.0,  492.0,  684.0,  716.0,  717.0,  645.0,  472.0,  369.0,  242.0,  142.0,  133.0,  88.0,  59.0,  41.0,  40.0,  31.0,  29.0,  31.0,  19.0,  12.0};
double finalResults_RSGravitonToJJ_M_1200_qq_M_FatPFJet1FatPFJet2_shifted_3 [50] = { 26.0,  31.0,  30.0,  45.0,  34.0,  47.0,  23.0,  59.0,  44.0,  54.0,  55.0,  64.0,  72.0,  78.0,  81.0,  100.0,  114.0,  125.0,  119.0,  155.0,  152.0,  203.0,  197.0,  212.0,  253.0,  265.0,  303.0,  361.0,  447.0,  564.0,  722.0,  932.0,  1267.0,  1493.0,  1524.0,  1290.0,  935.0,  595.0,  356.0,  205.0,  138.0,  102.0,  74.0,  63.0,  39.0,  43.0,  35.0,  32.0,  22.0,  19.0};
double finalResults_RSGravitonToJJ_M_2000_qq_M_FatPFJet1FatPFJet2_shifted_4 [50] = { 54.0,  45.0,  38.0,  58.0,  53.0,  52.0,  64.0,  52.0,  60.0,  70.0,  81.0,  75.0,  120.0,  127.0,  112.0,  128.0,  164.0,  156.0,  202.0,  238.0,  236.0,  256.0,  284.0,  345.0,  389.0,  388.0,  419.0,  580.0,  612.0,  800.0,  1029.0,  1337.0,  1957.0,  2362.0,  2542.0,  2049.0,  1419.0,  755.0,  392.0,  214.0,  138.0,  102.0,  65.0,  42.0,  36.0,  23.0,  25.0,  12.0,  19.0,  11.0};





//================================= new summer 11 D6T shape=======================================//


// Fat Jets with pt_min > 30 GeV

/// D6T summer11 fat-gg ptmin=30GeV  y500 just a copy of y700. Not used and valid. To be replaced if used
double RSGravitonToJJ_M_500_TuneD6T_ak5GGtoGG_fat30 [50] ={158, 144, 178, 206, 226, 202, 220, 246, 291, 271, 299, 288, 294, 336, 348, 317, 365, 374, 399, 389, 410, 369, 407, 441, 445, 476, 462, 491, 547, 649, 711, 818, 803, 876, 729, 649, 460, 381, 277, 218, 190, 159, 144, 114, 103, 112, 81, 71, 74, 67};
double RSGravitonToJJ_M_700_TuneD6T_ak5GGtoGG_fat30 [50] ={158, 144, 178, 206, 226, 202, 220, 246, 291, 271, 299, 288, 294, 336, 348, 317, 365, 374, 399, 389, 410, 369, 407, 441, 445, 476, 462, 491, 547, 649, 711, 818, 803, 876, 729, 649, 460, 381, 277, 218, 190, 159, 144, 114, 103, 112, 81, 71, 74, 67};
double RSGravitonToJJ_M_1200_TuneD6T_ak5GGtoGG_fat30 [50] ={82, 130, 118, 110, 135, 144, 137, 153, 158, 174, 176, 211, 186, 184, 219, 202, 194, 195, 229, 207, 233, 238, 257, 258, 245, 251, 262, 329, 352, 391, 443, 478, 588, 582, 555, 476, 324, 209, 140, 144, 114, 102, 60, 50, 58, 48, 45, 35, 36, 31};
double RSGravitonToJJ_M_2000_TuneD6T_ak5GGtoGG_fat30 [50] ={65, 73, 65, 78, 93, 77, 86, 89, 98, 116, 100, 114, 117, 103, 126, 109, 137, 134, 124, 147, 150, 151, 141, 160, 165, 170, 195, 177, 184, 194, 298, 293, 394, 446, 389, 345, 227, 143, 95, 60, 47, 53, 32, 28, 21, 18, 18, 8, 15, 9};
double RSGravitonToJJ_M_3500_TuneD6T_ak5GGtoGG_fat30 [50] ={57, 47, 47, 47, 61, 49, 53, 40, 49, 34, 46, 47, 50, 48, 55, 33, 41, 53, 38, 64, 49, 43, 44, 51, 55, 59, 53, 58, 64, 78, 71, 124, 123, 149, 154, 99, 67, 33, 27, 16, 15, 2, 9, 10, 1, 3, 2, 1, 2, 0};
double RSGravitonToJJ_M_4000_TuneD6T_ak5GGtoGG_fat30 [50] ={15, 17, 21, 18, 14, 15, 21, 9, 11, 8, 12, 9, 11, 9, 10, 10, 12, 8, 7, 6, 9, 13, 13, 12, 13, 8, 7, 6, 9, 10, 10, 15, 17, 17, 22, 11, 6, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0};


/// D6T summer11 fat-qq ptmin=30GeV  y500 just a copy of y700. Not used and valid. To be replaced if used

double RSGravitonToJJ_M_500_TuneD6T_ak5QQtoQQ_fat30 [50] ={15, 23, 17, 19, 20, 31, 32, 24, 27, 34, 42, 34, 42, 52, 47, 49, 58, 75, 76, 72, 75, 97, 119, 137, 166, 179, 191, 200, 245, 336, 398, 471, 593, 709, 754, 682, 577, 400, 292, 173, 115, 97, 77, 53, 40, 27, 32, 19, 20, 24};
double RSGravitonToJJ_M_700_TuneD6T_ak5QQtoQQ_fat30 [50] ={15, 23, 17, 19, 20, 31, 32, 24, 27, 34, 42, 34, 42, 52, 47, 49, 58, 75, 76, 72, 75, 97, 119, 137, 166, 179, 191, 200, 245, 336, 398, 471, 593, 709, 754, 682, 577, 400, 292, 173, 115, 97, 77, 53, 40, 27, 32, 19, 20, 24};
double RSGravitonToJJ_M_1200_TuneD6T_ak5QQtoQQ_fat30 [50] ={29, 31, 34, 27, 31, 34, 34, 32, 42, 42, 44, 57, 59, 70, 76, 82, 96, 100, 111, 132, 135, 149, 170, 187, 198, 200, 267, 295, 361, 456, 552, 790, 983, 1247, 1325, 1257, 973, 632, 391, 223, 136, 123, 81, 54, 44, 44, 34, 25, 15, 19};
double RSGravitonToJJ_M_2000_TuneD6T_ak5QQtoQQ_fat30 [50] ={50, 46, 45, 57, 53, 61, 54, 63, 69, 67, 66, 79, 100, 120, 126, 123, 158, 149, 182, 262, 222, 259, 271, 347, 383, 379, 480, 521, 620, 744, 1022, 1314, 1816, 2334, 2569, 2283, 1645, 920, 498, 285, 158, 116, 81, 47, 44, 25, 26, 15, 22, 17};
double RSGravitonToJJ_M_3500_TuneD6T_ak5QQtoQQ_fat30 [50] ={75, 81, 88, 92, 106, 93, 122, 115, 127, 134, 164, 165, 168, 182, 179, 228, 228, 272, 273, 284, 329, 323, 372, 403, 414, 468, 560, 614, 703, 841, 1024, 1312, 1944, 2541, 3035, 2439, 1585, 805, 371, 187, 94, 44, 31, 15, 9, 8, 3, 2, 1, 1};
double RSGravitonToJJ_M_4000_TuneD6T_ak5QQtoQQ_fat30 [50] ={46, 40, 48, 43, 34, 42, 52, 33, 49, 57, 46, 44, 58, 49, 50, 65, 64, 63, 67, 69, 91, 71, 69, 85, 88, 93, 120, 135, 129, 172, 190, 258, 334, 413, 484, 380, 224, 103, 50, 19, 9, 2, 2, 1, 0, 0, 1, 0, 0, 0};


/// D6T summer11 fat-qg ptmin=30GeV  y500 just a copy of y700. Not used and valid. To be replaced if used

double QstarToJJ_M_500_TuneD6T_ak5_fat30 [50] ={108, 159, 161, 179, 200, 256, 255, 290, 304, 370, 370, 457, 514, 539, 607, 687, 716, 825, 857, 961, 1036, 1169, 1210, 1240, 1340, 1460, 1642, 1873, 2187, 2620, 3191, 3803, 4383, 4867, 4982, 4487, 3568, 2702, 1968, 1454, 1125, 790, 669, 607, 454, 389, 352, 331, 259, 239};
double QstarToJJ_M_700_TuneD6T_ak5_fat30 [50] ={108, 159, 161, 179, 200, 256, 255, 290, 304, 370, 370, 457, 514, 539, 607, 687, 716, 825, 857, 961, 1036, 1169, 1210, 1240, 1340, 1460, 1642, 1873, 2187, 2620, 3191, 3803, 4383, 4867, 4982, 4487, 3568, 2702, 1968, 1454, 1125, 790, 669, 607, 454, 389, 352, 331, 259, 239};
double QstarToJJ_M_1200_TuneD6T_ak5_fat30 [50] ={122, 142, 146, 182, 187, 214, 220, 277, 267, 340, 382, 416, 460, 500, 544, 634, 708, 745, 822, 940, 948, 1029, 1126, 1189, 1234, 1364, 1579, 1708, 1946, 2409, 2970, 3724, 4771, 5306, 5527, 5041, 3745, 2705, 1899, 1311, 921, 684, 529, 422, 351, 328, 243, 232, 186, 184};
double QstarToJJ_M_2000_TuneD6T_ak5_fat30 [50] ={122, 139, 146, 179, 178, 204, 213, 231, 283, 318, 309, 371, 386, 488, 509, 589, 626, 706, 709, 806, 889, 889, 956, 1043, 1160, 1263, 1342, 1478, 1751, 2097, 2587, 3344, 4239, 5229, 5390, 4491, 3228, 2152, 1400, 913, 613, 453, 352, 272, 205, 181, 125, 140, 96, 69};
double QstarToJJ_M_3500_TuneD6T_ak5_fat30 [50] ={395, 479, 540, 563, 579, 576, 649, 657, 677, 684, 710, 725, 805, 799, 869, 885, 895, 988, 1072, 1098, 1097, 1160, 1297, 1208, 1333, 1510, 1501, 1664, 1888, 2164, 2574, 3501, 4197, 5238, 5416, 4273, 2724, 1630, 921, 555, 340, 235, 164, 131, 84, 53, 41, 35, 14, 14};
double QstarToJJ_M_4000_TuneD6T_ak5_fat30 [50] ={88, 90, 67, 88, 70, 100, 83, 98, 96, 80, 84, 93, 106, 97, 120, 109, 118, 141, 120, 100, 142, 135, 136, 151, 139, 174, 197, 183, 200, 252, 310, 333, 460, 540, 572, 411, 244, 99, 49, 25, 16, 2, 5, 4, 1, 2, 0, 0, 0, 0};


// Fat Jets with pt_min > 10 GeV


/*
/// D6T summer11 fat-qq: y500 is dummy just a copy of y700 and y400 a copy of y3500 not used for the moment
double y500[50] ={26, 35, 25, 25, 27, 37, 34, 25, 31, 32, 34, 35, 42, 53, 42, 49, 53, 61, 76, 64, 71, 70, 102, 116, 144, 153, 165, 189, 217, 284, 309, 394, 504, 565, 725, 723, 678, 512, 401, 285, 203, 140, 102, 86, 65, 39, 31, 29, 26, 25};

double y700[50] ={26, 35, 25, 25, 27, 37, 34, 25, 31, 32, 34, 35, 42, 53, 42, 49, 53, 61, 76, 64, 71, 70, 102, 116, 144, 153, 165, 189, 217, 284, 309, 394, 504, 565, 725, 723, 678, 512, 401, 285, 203, 140, 102, 86, 65, 39, 31, 29, 26, 25};
double y1200[50] ={35, 41, 28, 37, 25, 36, 36, 34, 45, 38, 50, 52, 50, 56, 70, 88, 80, 82, 116, 129, 112, 146, 157, 173, 208, 189, 211, 268, 335, 397, 509, 657, 814, 1118, 1298, 1307, 1143, 767, 547, 352, 175, 149, 100, 74, 53, 51, 38, 27, 17, 19};
double y2000[50] ={59, 44, 53, 50, 49, 63, 57, 53, 66, 71, 59, 69, 102, 111, 120, 128, 137, 156, 180, 242, 226, 241, 251, 318, 386, 380, 442, 452, 623, 676, 904, 1213, 1620, 2170, 2507, 2405, 1888, 1186, 626, 358, 215, 134, 95, 53, 46, 32, 30, 15, 19, 15};
double y3500[50] ={72, 78, 80, 91, 101, 95, 122, 112, 126, 134, 156, 155, 187, 174, 175, 213, 223, 247, 297, 287, 305, 324, 372, 395, 407, 454, 529, 610, 669, 792, 996, 1250, 1798, 2414, 2991, 2638, 1705, 976, 433, 214, 107, 47, 32, 21, 11, 4, 6, 3, 1, 1};
double y4000[50] ={72, 78, 80, 91, 101, 95, 122, 112, 126, 134, 156, 155, 187, 174, 175, 213, 223, 247, 297, 287, 305, 324, 372, 395, 407, 454, 529, 610, 669, 792, 996, 1250, 1798, 2414, 2991, 2638, 1705, 976, 433, 214, 107, 47, 32, 21, 11, 4, 6, 3, 1, 1};
*/

/*
/// D6T summer11 fat-qg
double y700[50] ={214, 240, 213, 243, 242, 267, 262, 291, 343, 357, 375, 407, 454, 505, 513, 587, 677, 729, 779, 917, 904, 1025, 1084, 1138, 1255, 1334, 1505, 1572, 1794, 2191, 2551, 3114, 3821, 4336, 4848, 4806, 4355, 3551, 2819, 2173, 1643, 1189, 918, 749, 606, 495, 440, 391, 342, 296};
double y1200[50] ={151, 149, 168, 170, 201, 221, 219, 246, 260, 300, 357, 359, 423, 492, 478, 585, 634, 709, 776, 851, 945, 977, 1037, 1144, 1175, 1316, 1441, 1485, 1809, 2142, 2449, 3159, 4203, 4852, 5361, 5418, 4632, 3361, 2476, 1743, 1207, 914, 649, 513, 397, 351, 285, 260, 226, 201};
double y2000[50] ={129, 127, 136, 179, 187, 196, 206, 214, 274, 301, 298, 337, 385, 450, 463, 584, 582, 666, 723, 744, 835, 918, 929, 992, 1089, 1238, 1301, 1369, 1622, 1973, 2327, 3014, 3819, 4906, 5358, 5010, 3712, 2543, 1731, 1122, 741, 506, 381, 316, 240, 201, 125, 152, 107, 82};
double y3500[50] ={363, 462, 529, 541, 585, 574, 647, 646, 673, 686, 697, 711, 779, 791, 860, 897, 862, 970, 1071, 1052, 1109, 1169, 1236, 1254, 1283, 1447, 1493, 1648, 1816, 2062, 2473, 3264, 3990, 5079, 5429, 4624, 3075, 1891, 1047, 639, 360, 266, 183, 133, 99, 62, 40, 36, 20, 17};
*/



/// D6T summer11 fat-gg: y500 is dummy just a copy of y700 and y400 a copy of y3500 not used for the moment
double y500[50] ={150, 138, 181, 206, 203, 209, 249, 231, 259, 268, 297, 259, 297, 318, 306, 311, 332, 324, 384, 374, 423, 357, 370, 410, 422, 474, 380, 488, 500, 533, 584, 735, 755, 881, 787, 782, 671, 557, 422, 315, 238, 223, 180, 155, 117, 118, 104, 80, 87, 84};
double y700[50] ={150, 138, 181, 206, 203, 209, 249, 231, 259, 268, 297, 259, 297, 318, 306, 311, 332, 324, 384, 374, 423, 357, 370, 410, 422, 474, 380, 488, 500, 533, 584, 735, 755, 881, 787, 782, 671, 557, 422, 315, 238, 223, 180, 155, 117, 118, 104, 80, 87, 84};
double y1200[50] ={80, 126, 117, 108, 132, 132, 138, 160, 166, 142, 178, 173, 184, 169, 211, 219, 197, 199, 208, 226, 206, 248, 225, 251, 238, 251, 254, 291, 313, 356, 388, 458, 501, 565, 596, 532, 429, 310, 217, 179, 135, 103, 82, 61, 54, 53, 56, 35, 43, 35};
double y2000[50] ={62, 70, 56, 78, 87, 75, 90, 82, 96, 104, 99, 109, 120, 105, 110, 122, 129, 124, 132, 141, 147, 136, 148, 150, 163, 160, 181, 174, 201, 172, 256, 278, 367, 427, 417, 378, 282, 174, 115, 81, 52, 47, 46, 36, 22, 15, 21, 14, 8, 16};
double y3500[50] ={54, 57, 43, 47, 51, 59, 48, 42, 51, 40, 39, 45, 49, 50, 53, 30, 44, 47, 43, 54, 57, 44, 44, 47, 54, 56, 50, 56, 69, 76, 69, 104, 121, 143, 158, 116, 77, 40, 29, 16, 17, 4, 10, 8, 3, 3, 3, 1, 1, 1};
double y4000[50] ={54, 57, 43, 47, 51, 59, 48, 42, 51, 40, 39, 45, 49, 50, 53, 30, 44, 47, 43, 54, 57, 44, 44, 47, 54, 56, 50, 56, 69, 76, 69, 104, 121, 143, 158, 116, 77, 40, 29, 16, 17, 4, 10, 8, 3, 3, 3, 1, 1, 1};


/// D6T summer11 pf-qq
/*
  double y700[50] ={21, 25, 23, 20, 23, 27, 24, 40, 35, 27, 45, 41, 46, 52, 54, 64, 79, 79, 90, 123, 110, 119, 143, 171, 173, 212, 221, 247, 258, 330, 351, 416, 537, 642, 640, 710, 588, 430, 321, 220, 114, 73, 56, 34, 28, 28, 14, 15, 18, 6};
  double y1200[50] ={31, 33, 38, 32, 30, 36, 36, 33, 46, 57, 51, 52, 65, 75, 84, 112, 124, 132, 153, 177, 170, 223, 235, 260, 264, 286, 303, 375, 409, 473, 642, 709, 865, 1076, 1223, 1169, 958, 626, 362, 187, 92, 70, 44, 24, 33, 17, 17, 8, 14, 10};
  double y2000[50] ={47, 50, 55, 48, 54, 60, 67, 56, 83, 77, 90, 96, 150, 152, 144, 173, 206, 204, 262, 339, 313, 335, 386, 461, 499, 516, 554, 628, 754, 882, 1097, 1345, 1691, 2122, 2301, 1995, 1439, 797, 358, 206, 104, 63, 37, 29, 24, 10, 12, 8, 7, 11};
  double y3500[50] ={83, 92, 94, 97, 136, 116, 130, 133, 138, 151, 161, 187, 197, 208, 202, 263, 284, 320, 367, 382, 411, 457, 473, 485, 544, 594, 681, 721, 822, 931, 1189, 1418, 1889, 2270, 2531, 2066, 1307, 631, 271, 120, 52, 21, 18, 9, 1, 4, 0, 4, 0, 1};
*/
/// D6T summer11 pf-qg
/*
  double y700[50] ={111, 149, 158, 206, 197, 241, 276, 311, 344, 379, 447, 492, 568, 665, 722, 809, 1001, 961, 1147, 1286, 1375, 1521, 1513, 1652, 1653, 1861, 1936, 2068, 2340, 2586, 2969, 3422, 3747, 4236, 4392, 4318, 3609, 2828, 2043, 1395, 966, 725, 549, 406, 360, 298, 234, 230, 199, 163};
  double y1200[50] ={125, 173, 166, 194, 218, 243, 239, 323, 327, 381, 454, 506, 576, 638, 710, 819, 863, 1054, 1084, 1289, 1360, 1449, 1512, 1642, 1650, 1778, 1920, 2001, 2381, 2690, 3021, 3474, 4170, 4724, 4820, 4425, 3449, 2360, 1556, 1006, 661, 486, 349, 260, 230, 178, 159, 122, 118, 121};
  double y2000[50] ={122, 147, 156, 183, 207, 243, 258, 281, 329, 344, 418, 449, 558, 600, 697, 749, 910, 920, 1043, 1114, 1264, 1258, 1395, 1421, 1544, 1666, 1658, 1834, 2091, 2382, 2747, 3329, 3972, 4480, 4537, 3702, 2607, 1605, 1002, 532, 389, 261, 185, 130, 123, 87, 62, 56, 56, 41};
  double y3500[50] ={437, 508, 592, 608, 665, 634, 729, 698, 726, 758, 809, 866, 929, 951, 1041, 1057, 1140, 1297, 1291, 1394, 1441, 1503, 1515, 1604, 1642, 1756, 1807, 2072, 2203, 2466, 2841, 3330, 3819, 4468, 4286, 3284, 2018, 1057, 519, 282, 167, 103, 68, 42, 28, 20, 12, 11, 9, 4};
*/
/// D6T summer11 pf-gg
/*
  double y700[50] ={143, 153, 187, 236, 220, 232, 245, 293, 278, 316, 325, 362, 377, 395, 399, 431, 463, 463, 508, 460, 458, 501, 472, 484, 522, 498, 524, 552, 557, 595, 652, 672, 709, 719, 689, 573, 477, 354, 244, 152, 134, 129, 95, 96, 76, 70, 64, 45, 46, 46};
  double y1200[50] ={88, 115, 138, 103, 151, 161, 160, 185, 205, 194, 228, 195, 237, 239, 255, 273, 260, 245, 263, 303, 306, 281, 288, 327, 312, 298, 359, 350, 376, 377, 426, 431, 486, 503, 465, 351, 265, 171, 90, 72, 50, 56, 34, 27, 25, 27, 19, 18, 16, 16};
  double y2000[50] ={93, 74, 94, 74, 82, 107, 102, 88, 120, 122, 133, 119, 145, 133, 164, 142, 156, 197, 208, 194, 190, 202, 174, 209, 209, 187, 208, 197, 225, 241, 263, 286, 342, 347, 325, 221, 147, 77, 38, 29, 17, 15, 15, 4, 9, 4, 3, 2, 3, 3};
  double y3500[50] ={65, 50, 61, 57, 52, 52, 55, 50, 41, 47, 55, 58, 61, 62, 43, 62, 51, 52, 62, 59, 60, 71, 68, 48, 67, 66, 61, 58, 81, 89, 72, 102, 109, 94, 113, 79, 38, 15, 7, 6, 2, 3, 4, 2, 0, 0, 0, 1, 0, 0};
*/
/// D6T summer11 calo-qq
/*
  double y700[50] ={27, 30, 21, 26, 19, 20, 32, 31, 30, 21, 36, 54, 46, 53, 66, 68, 71, 89, 95, 87, 124, 139, 134, 165, 197, 198, 195, 225, 245, 288, 300, 376, 449, 508, 573, 658, 554, 534, 440, 345, 191, 131, 79, 53, 42, 23, 16, 17, 13, 13};
  double y1200[50] ={34, 37, 31, 35, 35, 27, 48, 40, 39, 64, 57, 58, 58, 70, 94, 125, 118, 126, 189, 172, 185, 220, 238, 256, 283, 304, 303, 349, 364, 461, 506, 690, 784, 934, 1060, 1146, 1019, 771, 492, 303, 176, 78, 49, 46, 17, 24, 14, 6, 15, 6};
  double y2000[50] ={52, 41, 36, 59, 62, 70, 55, 72, 83, 80, 92, 103, 140, 151, 175, 164, 213, 230, 279, 302, 359, 343, 419, 441, 496, 525, 524, 643, 746, 759, 1038, 1260, 1516, 1973, 2176, 2115, 1596, 994, 498, 214, 115, 60, 39, 20, 17, 14, 7, 12, 9, 7};
  double y3500[50] ={83, 100, 88, 98, 127, 126, 135, 129, 152, 166, 170, 176, 223, 198, 216, 264, 302, 338, 350, 415, 452, 487, 461, 498, 554, 613, 715, 759, 842, 959, 1232, 1481, 1904, 2349, 2465, 2033, 1144, 521, 189, 72, 35, 18, 11, 4, 2, 1, 1, 3, 0, 1};
*/
/// D6T summer11 calo-qg
/*
  double y700[50] ={122, 146, 165, 165, 214, 240, 255, 313, 348, 421, 442, 504, 585, 633, 751, 746, 923, 1068, 1112, 1207, 1374, 1474, 1513, 1620, 1762, 1895, 2022, 2160, 2399, 2662, 3070, 3512, 3863, 4109, 4103, 3974, 3451, 2812, 2142, 1539, 1077, 769, 559, 392, 374, 287, 254, 217, 165, 166};
  double y1200[50] ={117, 181, 169, 204, 214, 230, 294, 302, 337, 387, 443, 539, 595, 628, 704, 835, 931, 1011, 1131, 1247, 1324, 1524, 1542, 1645, 1694, 1861, 1986, 2213, 2359, 2651, 3126, 3741, 4251, 4526, 4638, 4168, 3293, 2314, 1545, 1018, 682, 449, 313, 261, 209, 164, 152, 124, 105, 92};
  double y2000[50] ={129, 143, 164, 205, 200, 270, 285, 292, 307, 385, 391, 504, 555, 617, 719, 774, 933, 938, 1013, 1142, 1219, 1314, 1363, 1459, 1611, 1643, 1725, 1924, 2198, 2461, 2809, 3355, 4039, 4471, 4415, 3549, 2595, 1512, 881, 521, 320, 218, 192, 133, 99, 80, 64, 51, 47, 39};
  double y3500[50] ={459, 515, 585, 632, 696, 642, 716, 684, 746, 808, 819, 843, 961, 980, 1014, 1065, 1214, 1264, 1324, 1414, 1468, 1567, 1538, 1628, 1708, 1825, 1918, 2089, 2319, 2627, 3050, 3615, 4179, 4538, 4090, 2755, 1551, 734, 363, 198, 119, 69, 46, 31, 22, 11, 11, 9, 6, 4};
*/
/// D6T summer11 calo-gg
/*
  double y700[50] ={157, 164, 225, 226, 221, 257, 278, 259, 283, 322, 365, 344, 374, 381, 468, 471, 498, 453, 469, 518, 437, 509, 503, 530, 554, 530, 570, 598, 616, 666, 676, 679, 665, 693, 644, 481, 368, 263, 188, 167, 118, 96, 81, 78, 70, 61, 44, 42, 57, 38};
  double y1200[50] ={108, 114, 131, 133, 148, 167, 179, 196, 190, 206, 237, 224, 248, 263, 241, 280, 258, 289, 280, 297, 306, 299, 301, 322, 337, 342, 385, 377, 396, 372, 434, 472, 508, 466, 366, 289, 194, 114, 87, 61, 44, 41, 25, 27, 27, 24, 17, 16, 13, 13};
  double y2000[50] ={78, 83, 87, 104, 93, 96, 102, 112, 121, 128, 126, 142, 140, 148, 162, 170, 193, 195, 193, 204, 178, 185, 206, 194, 210, 208, 202, 204, 242, 268, 251, 318, 372, 326, 268, 200, 94, 56, 29, 28, 15, 9, 9, 10, 4, 2, 2, 1, 3, 4};
  double y3500[50] ={54, 55, 67, 58, 46, 59, 43, 58, 49, 50, 47, 64, 52, 66, 39, 60, 54, 54, 60, 67, 63, 70, 58, 54, 68, 58, 67, 82, 94, 68, 84, 108, 108, 136, 78, 49, 18, 8, 4, 5, 2, 2, 2, 0, 0, 0, 0, 1, 0, 0};
*/

//==================================== old spring 10 D6T shape===========================================//

/////qg
/*
  double y500[50]= {146, 172, 193, 193, 200, 271, 286, 331, 375, 395, 477, 543, 613, 629, 769, 853, 908, 1033, 1123, 1265, 1391, 1474, 1522, 1657, 1821, 1880, 2076, 2135, 2478, 2764, 3100, 3376, 3592, 3832, 3812, 3430, 3045, 2493, 1954, 1417, 1083, 764, 609, 439, 381, 311, 281, 251, 222, 192};
  double y700[50] = {172, 195, 202, 247, 249, 334, 368, 403, 479, 522, 630, 652, 733, 827, 929, 1067, 1195, 1377, 1482, 1605, 1764, 1859, 2055, 2092, 2213, 2441, 2517, 2887, 3189, 3598, 4070, 4403, 4878, 5220, 4993, 4577, 3687, 3053, 2198, 1493, 1034, 734, 541, 444, 359, 314, 268, 238, 211, 185};
  double y1200[50] = {168, 183, 233, 239, 280, 311, 334, 410, 460, 508, 581, 643, 723, 806, 947, 986, 1162, 1328, 1490, 1513, 1661, 1819, 1951, 1917, 2074, 2281, 2400, 2780, 2990, 3386, 3926, 4668, 5247, 5685, 5452, 4709, 3660, 2436, 1633, 958, 643, 470, 349, 284, 223, 242, 173, 157, 136, 97};
  double y2000[50] = {147, 189, 199, 241, 248, 286, 328, 313, 390, 420, 427, 556, 638, 684, 746, 856, 965, 1095, 1233, 1296, 1437, 1489, 1543, 1677, 1654, 1802, 2033, 2172, 2487, 2857, 3265, 3973, 4542, 4996, 4770, 3921, 2751, 1601, 961, 563, 355, 239, 182, 145, 117, 88, 81, 64, 39, 35};
  double y3500[50] = { 559, 546, 576, 633, 711, 693, 698, 767, 827, 813, 930, 951, 987, 1068, 1129, 1139, 1262, 1312, 1422, 1499, 1547, 1588, 1708, 1678, 1803, 1768, 1894, 2218, 2481, 2733, 3138, 3742, 4484, 4626, 4130, 2801, 1605, 735, 336, 198, 99, 81, 46, 34, 17, 14, 14, 7, 6, 4};
*/

////////////gg

/*
  double y500[50]= {262, 274, 288, 343, 385, 433, 480, 455, 519, 523, 592, 586, 645, 693, 681, 744, 719, 772, 833, 803, 836, 795, 876, 866, 830, 914, 920, 910, 1111, 1066, 1096, 1061, 1010, 967, 814, 669, 547, 417, 294, 229, 174, 146, 135, 132, 102, 120, 114, 94, 84, 86};
  double y700[50]= {197, 200, 232, 251, 280, 305, 329, 334, 335, 382, 406, 434, 387, 456, 483, 534, 467, 535, 572, 566, 586, 584, 538, 604, 602, 587, 634, 629, 702, 772, 799, 773, 756, 704, 586, 504, 324, 223, 184, 109, 107, 107, 77, 84, 63, 64, 55, 50, 48, 26};
  double y1200[50]= {124, 155, 163, 186, 180, 188, 206, 238, 241, 255, 293, 282, 290, 309, 330, 325, 369, 356, 374, 394, 374, 405, 379, 403, 383, 400, 413, 508, 464, 515, 551, 611, 621, 582, 419, 312, 206, 131, 78, 61, 57, 50, 42, 37, 30, 22, 28, 20, 21, 18};
  double y2000[50]= {91, 96, 100, 101, 104, 98, 106, 133, 140, 148, 140, 149, 169, 168, 152, 160, 181, 187, 216, 198, 224, 210, 203, 237, 190, 219, 225, 246, 240, 284, 342, 322, 349, 333, 270, 160, 94, 56, 45, 22, 18, 16, 10, 8, 6, 11, 10, 4, 4, 3};
  double y3500[50]= {62, 51, 42, 70, 53, 82, 69, 52, 66, 64, 58, 64, 44, 60, 52, 52, 70, 74, 53, 66, 54, 68, 68, 64, 71, 64, 75, 62, 80, 76, 88, 122, 128, 117, 71, 45, 26, 9, 3, 2, 4, 1, 0, 0, 1, 0, 0, 0, 0, 1};
*/

/////////////qq
/*
  double y500[50]= {24, 16, 20, 23, 28, 30, 27, 30, 36, 35, 24, 53, 37, 59, 60, 68, 94, 83, 105, 95, 128, 137, 137, 167, 164, 169, 235, 220, 258, 276, 295, 372, 413, 441, 498,543, 515, 477, 379, 271, 198, 145, 96, 63, 39, 32, 36, 19, 16, 19};
  double y700[50]= {21, 15, 15, 21, 28, 36, 23, 40, 36, 46, 40, 73, 49, 61, 66, 65, 93, 108, 113, 108, 119, 160, 175, 167, 211, 210, 250, 270, 279, 333, 362, 445, 502, 609, 642, 660, 674, 540, 442, 253, 163, 118, 53, 44, 35, 30, 18, 13, 15, 11};
  double y1200[50]= {38, 44, 43, 49, 44, 49, 47, 60, 58, 64, 70, 89, 71, 108, 117, 135, 167, 183, 211, 226, 257, 299, 295, 331, 309, 365, 434, 442, 475, 617, 724, 882, 1011, 1319, 1385, 1408, 1165, 931, 521, 277, 135, 86, 57, 26, 23, 23, 14, 17, 11, 14};
  double y2000[50]= {42, 57, 48, 51, 58, 56, 61, 80, 92, 89, 93, 114, 125, 167, 170, 215, 206, 264, 302, 321, 342, 385, 441, 489, 464, 521, 616, 664, 759, 879, 1067, 1304, 1611, 2048, 2215, 2136, 1622, 1013, 497, 224, 112, 60, 40, 26, 21, 14, 15, 6, 4, 3};
  double y3500[50]= {103, 75, 107, 96, 92, 109, 151, 124, 149, 169, 170, 201, 161, 214, 249, 277, 287, 362, 344, 407, 414, 466, 493, 537, 554, 617, 680, 769, 930, 968, 1202, 1524, 1947, 2451, 2482, 1890, 1169, 479, 183, 43, 25, 13, 8, 4, 4, 1, 2, 2, 0, 1};
*/


///// PF-qg
/*
  double y500[50] ={41, 41, 62, 72, 91, 103, 145, 157, 173, 238, 292, 365, 448, 496, 526, 672, 688, 822, 912, 1049, 1066, 1144, 1198, 1322, 1418, 1457, 1485, 1680, 1887, 2082, 2392, 2678, 3003, 3179, 3199, 2896, 2397, 1874, 1396, 1032, 764, 569, 395, 321, 312, 248, 230, 183, 204, 155};
  double y700[50] ={84, 103, 138, 150, 186, 204, 293, 260, 368, 395, 447, 507, 567, 600, 709, 780, 855, 975, 1128, 1196, 1253, 1436, 1413, 1542, 1556, 1712, 1785, 2050, 2284, 2524, 2740, 3388, 3704, 4021, 3961, 3557, 2969, 2216, 1564, 1066, 740, 551, 444, 343, 275, 251, 204, 186, 153, 158};
  double y1200[50] ={117, 140, 147, 152, 143, 202, 223, 260, 286, 341, 363, 390, 457, 507, 581, 611, 699, 820, 879, 957, 1036, 1113, 1140, 1187, 1209, 1345, 1474, 1639, 1833, 1909, 2331, 2703, 3276, 3626, 3591, 3183, 2407, 1724, 1012, 713, 447, 321, 224, 177, 178, 159, 127, 94, 92, 84};
  double y2000[50] ={142, 168, 206, 225, 246, 252, 297, 319, 344, 379, 439, 523, 557, 673, 681, 792, 895, 980, 1141, 1222, 1336, 1432, 1428, 1586, 1604, 1641, 1849, 2049, 2216, 2632, 3028, 3539, 4240, 4831, 4903, 4191, 3000, 1708, 1085, 679, 411, 278, 212, 137, 122, 106, 79, 67, 55, 45};
  double y3500[50] ={464, 514, 499, 575, 581, 647, 658, 624, 740, 763, 819, 797, 911, 905, 1007, 1001, 1093, 1128, 1219, 1316, 1347, 1410, 1441, 1515, 1522, 1551, 1667, 1831, 2035, 2252, 2590, 3052, 3775, 4184, 3963, 3088, 1946, 1047, 489, 243, 144, 89, 58, 36, 27, 20, 15, 9, 4, 6};
*/

///// PF-gg
/*
  double y500[50] ={14, 23, 11, 16, 26, 39, 43, 52, 65, 79, 93, 118, 97, 128, 151, 179, 181, 183, 203, 207, 244, 226, 243, 244, 225, 222, 220, 247, 267, 282, 283, 297, 314, 273, 305, 250, 186, 133, 97, 86, 75, 55, 34, 40, 38, 32, 33, 30, 34, 25};
  double y700[50] ={63, 90, 103, 133, 169, 204, 233, 283, 253, 332, 327, 329, 345, 390, 403, 405, 446, 408, 486, 469, 476, 503, 490, 488, 506, 512, 477, 518, 548, 553, 629, 672, 699, 701, 609, 501, 387, 265, 191, 150, 119, 90, 86, 68, 58, 45, 58, 55, 49, 35};
  double y1200[50] ={106, 137, 107, 145, 137, 166, 173, 183, 219, 217, 219, 219, 261, 262, 260, 278, 296, 285, 298, 333, 323, 337, 328, 335, 324, 334, 342, 387, 408, 399, 405, 503, 553, 540, 487, 359, 243, 138, 92, 83, 46, 49, 40, 31, 33, 23, 23, 20, 18, 13};
  double y2000[50] ={63, 74, 68, 90, 89, 88, 101, 102, 111, 135, 124, 134, 120, 132, 135, 153, 147, 164, 158, 168, 189, 168, 194, 189, 167, 166, 200, 196, 216, 254, 246, 281, 292, 346, 285, 205, 97, 60, 53, 22, 18, 21, 15, 11, 8, 8, 7, 9, 2, 2};
  double y3500[50] ={53, 56, 46, 57, 50, 71, 66, 66, 47, 54, 64, 58, 48, 56, 55, 50, 51, 59, 60, 64, 60, 70, 55, 61, 60, 61, 62, 65, 66, 75, 82, 105, 109, 114, 95, 61, 37, 18, 10, 4, 2, 3, 2, 0, 0, 1, 0, 0, 0, 0};
*/


///// PF-qq
/*
  double y500[50] ={0, 1, 1, 0, 1, 1, 3, 1, 3, 0, 4, 1, 2, 5, 1, 3, 3, 6, 4, 3, 6, 5, 8, 4, 7, 3, 3, 5, 5, 8, 3, 5, 1, 9, 13, 6, 3, 6, 8, 9, 9, 4, 9, 9, 9, 4, 7, 7, 13, 11};
  double y700[50] ={14, 9, 14, 14, 14, 24, 24, 25, 32, 32, 44, 32, 44, 47, 49, 57, 74, 67, 102, 101, 116, 116, 143, 134, 196, 217, 196, 236, 245, 318, 353, 427, 532, 609, 648, 622, 513, 371, 275, 146, 97, 78, 44, 32, 34, 13, 16, 20, 11, 10};
  double y1200[50] ={37, 52, 35, 30, 42, 46, 45, 39, 48, 47, 55, 60, 78, 91, 81, 117, 125, 146, 177, 177, 230, 237, 251, 277, 275, 300, 357, 364, 412, 520, 691, 786, 976, 1176, 1366, 1260, 962, 639, 392, 198, 125, 83, 47, 33, 27, 25, 14, 10, 7, 8};
  double y2000[50] ={41, 45, 49, 54, 44, 60, 54, 65, 74, 73, 80, 88, 102, 118, 136, 172, 175, 197, 234, 269, 309, 320, 349, 390, 405, 453, 494, 583, 623, 746, 901, 1116, 1491, 1817, 2074, 1973, 1455, 844, 417, 254, 120, 61, 43, 25, 13, 20, 18, 8, 5, 2};
  double y3500[50] ={86, 87, 93, 87, 95, 105, 141, 126, 150, 145, 144, 186, 173, 175, 232, 233, 265, 325, 327, 371, 387, 418, 424, 487, 513, 583, 617, 690, 832, 882, 1105, 1384, 1774, 2159, 2471, 2103, 1345, 705, 268, 110, 46, 19, 14, 7, 6, 2, 2, 3, 1, 1};
*/

///// FAT11 - qg
/*
  double y500[50] ={27, 30, 41, 53, 52, 74, 106, 117, 114, 167, 204, 279, 295, 357, 375, 438, 486, 615, 625, 731, 805, 872, 883, 992, 1061, 1119, 1121, 1340, 1494, 1720, 2047, 2425, 2875, 3240, 3488, 3312, 3032, 2569, 1925, 1555, 1229, 948, 739, 553, 469, 427, 369, 292, 291, 245};
  double y700[50] ={69, 79, 118, 120, 150, 138, 213, 206, 260, 290, 339, 406, 421, 451, 504, 560, 653, 728, 812, 878, 951, 993, 1026, 1119, 1192, 1250, 1344, 1572, 1795, 2043, 2314, 3019, 3638, 4157, 4541, 4438, 3806, 3025, 2293, 1661, 1243, 983, 723, 596, 490, 430, 344, 303, 243, 236};
  double y1200[50] ={94, 135, 134, 133, 121, 161, 178, 186, 220, 258, 284, 301, 360, 345, 421, 453, 515, 617, 678, 693, 730, 795, 808, 897, 898, 1012, 1102, 1238, 1421, 1601, 2024, 2460, 3174, 3749, 4050, 4034, 3216, 2453, 1653, 1155, 786, 599, 462, 352, 298, 287, 214, 189, 168, 123};
  double y2000[50] ={118, 153, 161, 185, 200, 230, 237, 260, 268, 308, 359, 408, 415, 471, 541, 607, 655, 751, 814, 915, 932, 1017, 1100, 1137, 1177, 1259, 1415, 1589, 1790, 2109, 2553, 3223, 4164, 5153, 5693, 5516, 4157, 2728, 1772, 1156, 783, 563, 390, 357, 251, 199, 184, 147, 124, 89};
  double y3500[50] ={420, 470, 449, 498, 524, 609, 615, 527, 644, 694, 712, 680, 766, 799, 852, 913, 903, 968, 1033, 1026, 1070, 1167, 1189, 1139, 1308, 1330, 1421, 1499, 1687, 1996, 2259, 2818, 3864, 4728, 4922, 4151, 2967, 1753, 1026, 544, 341, 234, 147, 80, 73, 51, 47, 31, 13, 16};
*/

///// FAT11 - gg
/*
  double y500[50] ={8, 17, 11, 8, 23, 25, 22, 28, 37, 55, 53, 83, 77, 109, 102, 120, 127, 139, 148, 152, 183, 185, 198, 209, 193, 208, 206, 226, 236, 276, 243, 298, 328, 336, 344, 291, 269, 213, 166, 154, 138, 103, 59, 56, 72, 47, 62, 45, 33, 39};
  double y700[50] ={45, 60, 83, 93, 117, 133, 181, 217, 209, 236, 268, 275, 260, 295, 346, 340, 362, 333, 365, 367, 381, 430, 406, 435, 401, 438, 418, 460, 480, 505, 588, 636, 735, 800, 787, 737, 611, 445, 358, 298, 256, 172, 150, 129, 110, 87, 97, 77, 61, 56};
  double y1200[50] ={83, 104, 103, 124, 93, 132, 145, 173, 186, 173, 180, 171, 211, 207, 208, 215, 239, 254, 238, 275, 273, 269, 278, 264, 264, 313, 277, 309, 342, 361, 382, 475, 558, 661, 679, 590, 422, 273, 200, 125, 118, 108, 83, 85, 54, 43, 46, 34, 34, 25};
  double y2000[50] ={59, 56, 58, 67, 82, 81, 76, 93, 85, 108, 104, 108, 115, 116, 111, 113, 141, 134, 147, 117, 152, 128, 127, 145, 164, 157, 135, 164, 183, 225, 231, 261, 311, 392, 423, 328, 214, 121, 116, 83, 58, 45, 41, 26, 18, 25, 17, 22, 12, 5};
  double y3500[50] ={46, 40, 52, 60, 53, 61, 71, 54, 53, 44, 56, 53, 43, 58, 44, 58, 46, 42, 49, 55, 50, 57, 58, 56, 46, 58, 52, 54, 54, 64, 70, 104, 127, 135, 134, 108, 77, 53, 27, 20, 11, 6, 6, 4, 3, 1, 2, 1, 0, 1};
*/

///// FAT11 - qq

/*
  double y500[50] ={0, 1, 1, 0, 1, 1, 3, 1, 2, 0, 4, 1, 1, 4, 0, 2, 4, 3, 0, 2, 6, 2, 7, 3, 8, 4, 5, 5, 3, 4, 2, 6, 2, 4, 11, 5, 2, 7, 4, 8, 10, 8, 12, 8, 7, 6, 11, 5, 4, 5};
  double y700[50] ={12, 7, 11, 14, 10, 15, 18, 24, 28, 24, 34, 28, 38, 42, 38, 33, 52, 54, 81, 70, 90, 79, 107, 90, 150, 144, 167, 181, 201, 262, 290, 371, 508, 604, 688, 689, 585, 499, 340, 219, 162, 125, 82, 69, 50, 28, 30, 37, 25, 17};
  double y1200[50] ={34, 50, 37, 39, 37, 36, 44, 40, 30, 47, 50, 50, 53, 63, 66, 78, 97, 114, 132, 135, 158, 155, 174, 210, 201, 230, 290, 307, 309, 417, 550, 672, 914, 1207, 1429, 1461, 1254, 817, 549, 350, 196, 152, 86, 61, 59, 43, 36, 27, 14, 16};
  double y2000[50] ={33, 39, 40, 54, 36, 57, 46, 59, 57, 53, 79, 72, 82, 83, 106, 118, 157, 173, 180, 188, 247, 256, 240, 286, 315, 353, 334, 477, 504, 607, 763, 950, 1410, 1815, 2241, 2297, 1799, 1141, 660, 397, 212, 117, 104, 68, 36, 44, 24, 21, 17, 12};
  double y3500[50] ={80, 80, 101, 78, 90, 94, 113, 117, 143, 134, 128, 153, 160, 163, 192, 201, 226, 268, 273, 292, 310, 348, 314, 383, 419, 438, 543, 557, 691, 786, 929, 1253, 1649, 2243, 2814, 2561, 1803, 1009, 429, 179, 108, 42, 29, 15, 9, 5, 4, 4, 1, 1};
*/


// ------------------------------------- 2012 Z2 fat jet shapes --------------------------------------------

double shape_2012_Z2star_RSG_qq_500[50] =  {
2.92245, 3.26705, 3.65654, 4.09732, 4.5968, 5.16356, 5.80756, 6.54032, 7.37529, 8.3281, 9.41703, 10.6634, 12.0922, 13.7329, 15.6198, 17.7936, 20.3022, 23.2023, 26.5611, 30.4582, 34.9886, 40.2655, 46.4241, 53.6265, 62.0674, 71.9812, 83.6509, 97.4188, 113.7, 133.001, 155.939, 183.267, 213.508, 232.41, 234.343, 218.882, 189.377, 151.776, 113.133, 85.245, 66.561, 53.4293, 43.8462, 36.6374, 31.0772, 26.698, 23.1869, 20.3283, 17.9697, 16.0007};

double shape_2012_Z2star_RSG_qq_700[50] = {
2.25583, 2.47167, 2.71257, 2.98194, 3.28378, 3.62271, 4.00413, 4.43433, 4.92071, 5.47196, 6.09834, 6.81199, 7.62732, 8.56156, 9.63527, 10.8732, 12.3053, 13.9676, 15.9044, 18.1696, 20.8295, 23.9663, 27.6819, 32.1042, 37.3939, 43.7546, 51.4463, 60.8031, 72.2582, 86.3774, 103.907, 125.841, 153.018, 174.003, 179.715, 168.588, 143.642, 111.161, 78.7429, 56.9062, 42.9566, 33.5228, 26.8555, 21.9752, 18.2991, 15.4635, 13.2316, 11.4445, 9.99213, 8.79623};

double shape_2012_Z2star_RSG_qq_1200[50] = {
1.65972, 1.78543, 1.9239, 2.07676, 2.24593, 2.43358, 2.6423, 2.87508, 3.13544, 3.42754, 3.75631, 4.1276, 4.54841, 5.02719, 5.57413, 6.20163, 6.92488, 7.76262, 8.73809, 9.88041, 11.2263, 12.8226, 14.7295, 17.0251, 19.8125, 23.2285, 27.4582, 32.7552, 39.4732, 48.1147, 59.4088, 74.4393, 94.861, 116.756, 125.576, 117.754, 96.2679, 68.6164, 44.2227, 30.1292, 21.6939, 16.2795, 12.6148, 10.0289, 8.14182, 6.72611, 5.63911, 4.78787, 4.10985, 3.56177};

double shape_2012_Z2star_RSG_qq_2000[50] = {
1.09384, 1.16388, 1.24041, 1.32424, 1.41627, 1.51758, 1.6294, 1.75321, 1.89069, 2.04387, 2.21514, 2.40735, 2.62393, 2.86901, 3.14763, 3.46595, 3.8316, 4.25405, 4.74522, 5.32026, 5.99861, 6.80552, 7.77424, 8.94924, 10.3909, 12.1827, 14.4428, 17.3419, 21.1336, 26.2072, 33.1818, 43.087, 57.7287, 74.9885, 82.1316, 75.531, 58.323, 37.8142, 20.6194, 11.9976, 8.09232, 5.93751, 4.60027, 3.70273, 3.06556, 2.59374, 2.23267, 1.94897, 1.72119, 1.53497};

double shape_2012_Z2star_RSG_qq_3500[50] = {
1.06031, 1.10769, 1.15864, 1.21355, 1.27286, 1.33707, 1.40676, 1.48262, 1.56543, 1.65609, 1.75569, 1.8655, 1.98704, 2.12212, 2.27293, 2.44215, 2.63305, 2.84969, 3.09717, 3.38195, 3.71231, 4.09909, 4.55662, 5.10427, 5.76876, 6.58785, 7.61651, 8.9375, 10.6806, 13.0596, 16.4503, 21.568, 29.9342, 41.9709, 47.6051, 42.9252, 30.7698, 17.5344, 7.94347, 3.25322, 2.20972, 1.7773, 1.52624, 1.35743, 1.23403, 1.13879, 1.06243, 0.99945, 0.946358, 0.900815};

double shape_2012_Z2star_RSG_qq_4500[50] = {
2.12097, 2.1592, 2.19938, 2.24168, 2.28628, 2.3334, 2.38329, 2.4362, 2.49247, 2.55245, 2.61655, 2.68527, 2.75918, 2.83893, 2.92534, 3.01936, 3.12214, 3.23513, 3.36007, 3.49918, 3.65531, 3.83213, 4.03456, 4.26927, 4.54561, 4.87723, 5.28483, 5.80176, 6.4859, 7.44882, 8.94212, 11.7075, 18.5931, 26.2819, 29.0028, 24.9864, 16.8053, 8.82412, 3.61723, 1.67202, 1.35122, 1.20149, 1.10743, 1.04035, 0.988927, 0.947642, 0.913397, 0.884298, 0.859108, 0.836978};


double shape_2012_Z2star_RSG_gg_500[50] = {
26.6204, 27.6921, 28.8196, 30.0064, 31.2564, 32.5738, 33.963, 35.4289, 36.9766, 38.6118, 40.3405, 42.1695, 44.1058, 46.1573, 48.3323, 50.6401, 53.0906, 55.6948, 58.4645, 61.4127, 64.5537, 67.9031, 71.4778, 75.2966, 79.3802, 83.7512, 88.4347, 93.4582, 98.8524, 104.651, 110.892, 117.616, 92.7799, 84.1971, 73.9603, 62.8866, 51.7578, 41.2336, 32.4083, 26.3247, 21.9644, 18.7092, 16.2007, 14.2174, 12.6163, 11.3007, 10.2037, 9.2771, 8.48574, 7.80328};

double shape_2012_Z2star_RSG_gg_700[50] = {
16.1056, 16.761, 17.4546, 18.1893, 18.9682, 19.7949, 20.6733, 21.6075, 22.6022, 23.6627, 24.7945, 26.004, 27.2983, 28.6851, 30.1731, 31.7722, 33.4931, 35.3482, 37.3513, 39.5178, 41.8656, 44.4145, 47.1873, 50.2102, 53.5129, 57.1297, 61.1004, 65.4707, 70.2942, 75.6334, 81.5614, 88.1649, 95.5465, 80.4944, 69.449, 55.7236, 41.5802, 29.3964, 21.8629, 17.0715, 13.804, 11.459, 9.70923, 8.36283, 7.30073, 6.4455, 5.74484, 5.16233, 4.67184, 4.25426};

double shape_2012_Z2star_RSG_gg_1200[50] = {
7.10834, 7.49427, 7.90793, 8.35181, 8.8287, 9.34165, 9.8941, 10.4899, 11.1332, 11.8288, 12.5822, 13.3992, 14.2866, 15.2521, 16.3044, 17.4532, 18.7096, 20.0864, 21.5981, 23.2613, 25.0953, 27.122, 29.3672, 31.8605, 34.6366, 37.7361, 41.2067, 45.1047, 49.4968, 54.4625, 60.0968, 66.5144, 73.7804, 75.3788, 67.1879, 52.2477, 35.4468, 21.4594, 14.2226, 10.3234, 7.93987, 6.35685, 5.24172, 4.42087, 3.79567, 3.30633, 2.9147, 2.59539, 2.33093, 2.10893};

double shape_2012_Z2star_RSG_gg_2000[50] = {
3.29593, 3.49659, 3.71371, 3.94901, 4.20441, 4.48211, 4.78457, 5.1146, 5.47538, 5.87057, 6.30435, 6.7815, 7.30757, 7.88892, 8.533, 9.24842, 10.0453, 10.9355, 11.9329, 13.0542, 14.319, 15.7509, 17.3783, 19.2355, 21.3642, 23.8156, 26.6529, 29.9544, 33.8186, 38.3698, 43.7667, 50.2137, 57.9775, 63.78, 57.4562, 42.0192, 24.9469, 12.1257, 6.9503, 4.81009, 3.65198, 2.93023, 2.43912, 2.08426, 1.81638, 1.6073, 1.43977, 1.30268, 1.18849, 1.09199};

double shape_2012_Z2star_RSG_gg_3500[50] = {
2.00846, 2.11538, 2.23073, 2.35542, 2.49044, 2.63696, 2.79629, 2.96994, 3.15963, 3.36737, 3.59546, 3.84661, 4.12396, 4.4312, 4.77271, 5.15364, 5.5802, 6.05979, 6.6014, 7.21596, 7.91688, 8.72076, 9.64834, 10.7258, 11.9864, 13.4732, 15.2424, 17.3687, 19.9524, 23.1316, 27.0996, 32.1334, 38.6415, 45.6386, 41.4576, 27.6025, 13.4699, 4.81786, 2.30562, 1.75583, 1.48401, 1.31357, 1.19358, 1.10305, 1.03152, 0.973097, 0.924173, 0.882399, 0.846172, 0.814349};

double shape_2012_Z2star_RSG_gg_4500[50] = {
3.30675, 3.37802, 3.4531, 3.53233, 3.61609, 3.70481, 3.79897, 3.8991, 4.00585, 4.11992, 4.24216, 4.37352, 4.51513, 4.66832, 4.83468, 5.01609, 5.21482, 5.43366, 5.67603, 5.94622, 6.24965, 6.59331, 6.98637, 7.44111, 7.97444, 8.61032, 9.38398, 10.3496, 11.5957, 13.2779, 15.701, 19.5637, 26.862, 31.9191, 27.0122, 16.2804, 6.9882, 2.25333, 1.51961, 1.28169, 1.14801, 1.05807, 0.991671, 0.939747, 0.897531, 0.862224, 0.832056, 0.805841, 0.78275, 0.762182};


double shape_2012_Z2star_Qstar_qg_500[50] = {
14.796, 16.0194, 17.3598, 18.8298, 20.4436, 22.2174, 24.1691, 26.3192, 28.6904, 31.3088, 34.2037, 37.4084, 40.9606, 44.9033, 49.2854, 54.1628, 59.5993, 65.6679, 72.4526, 80.0498, 88.5705, 98.1429, 108.915, 121.059, 134.774, 150.293, 167.886, 187.871, 210.62, 236.569, 266.234, 300.224, 338.838, 365.433, 367.882, 345.698, 303.23, 248.275, 189.749, 139.758, 107.088, 84.8189, 68.9361, 57.1963, 48.2649, 41.3063, 35.7754, 31.3038, 27.6353, 24.5869};

double shape_2012_Z2star_Qstar_qg_700[50] = {
7.00135, 7.46917, 7.98057, 8.54084, 9.15604, 9.83315, 10.5803, 11.4069, 12.3239, 13.3442, 14.4831, 15.7584, 17.1916, 18.8082, 20.639, 22.7211, 25.0998, 27.8308, 30.9826, 34.6409, 38.9132, 43.9358, 49.8836, 56.9833, 65.5323, 75.9262, 88.699, 104.584, 124.605, 150.227, 183.588, 227.9, 284.441, 328.682, 346.354, 332.832, 291.668, 233.085, 169.863, 119.239, 87.5317, 66.578, 52.0877, 41.6958, 34.0173, 28.2007, 23.7006, 20.1553, 17.3179, 15.0156};

double shape_2012_Z2star_Qstar_qg_1200[50] = {
3.81872, 4.05676, 4.31642, 4.60032, 4.91147, 5.25336, 5.63004, 6.04623, 6.50748, 7.02031, 7.59245, 8.2331, 8.95328, 9.76625, 10.6881, 11.7386, 12.9418, 14.3279, 15.9345, 17.8093, 20.0134, 22.6256, 25.7496, 29.5231, 34.1324, 39.8339, 46.988, 56.1127, 67.9727, 83.732, 105.228, 135.486, 178.864, 218.472, 236.435, 226.712, 192.612, 144.989, 96.9504, 64.7856, 45.5888, 33.3871, 25.2406, 19.5823, 15.5226, 12.5298, 10.2721, 8.53496, 7.17518, 6.09463};

double shape_2012_Z2star_Qstar_qg_2000[50] = {
2.42186, 2.56294, 2.71638, 2.88365, 3.06643, 3.26667, 3.48664, 3.72898, 3.99679, 4.29371, 4.62404, 4.99294, 5.40654, 5.87227, 6.39913, 6.99814, 7.68291, 8.47035, 9.38175, 10.4441, 11.6922, 13.1713, 14.9411, 17.0817, 19.7029, 22.9572, 27.0626, 32.3385, 39.2672, 48.6047, 61.5882, 80.3522, 108.831, 140.093, 155.595, 149.105, 123.284, 87.9498, 54.1353, 32.4249, 21.2299, 14.8004, 10.8096, 8.18333, 6.37442, 5.082, 4.13044, 3.41203, 2.85798, 2.4228};

double shape_2012_Z2star_Qstar_qg_3500[50] =  {
2.64095, 2.74661, 2.85976, 2.9812, 3.1118, 3.25258, 3.40471, 3.56954, 3.74861, 3.94374, 4.15706, 4.39108, 4.64876, 4.93365, 5.25003, 5.60306, 5.99909, 6.44596, 6.95344, 7.53393, 8.20328, 8.98214, 9.89781, 10.9871, 12.3008, 13.9108, 15.9217, 18.4918, 21.8709, 26.4752, 33.0481, 43.0436, 59.6909, 78.9612, 87.8624, 82.2387, 64.7491, 42.882, 23.8892, 11.6615, 6.7876, 4.54593, 3.30591, 2.53806, 2.02487, 1.6624, 1.39544, 1.19227, 1.03351, 0.906721};

double shape_2012_Z2star_Qstar_qg_4500[50] = {
7.81162, 7.86336, 7.91722, 7.97338, 8.03201, 8.09333, 8.15757, 8.225, 8.29591, 8.37066, 8.44964, 8.53331, 8.62221, 8.71698, 8.81836, 8.92725, 9.04474, 9.17217, 9.31118, 9.46388, 9.63295, 9.82194, 10.0356, 10.2806, 10.5665, 10.9079, 11.3284, 11.8699, 12.6167, 13.7806, 16.1997, 24.9934, 35.947, 43.8961, 45.5108, 40.0616, 29.9411, 18.9991, 10.2358, 4.68208, 2.34941, 1.76038, 1.47428, 1.29665, 1.17244, 1.07922, 1.00587, 0.946167, 0.896321, 0.853873};



// ------------------------------------- 2012 D6T fat jet shapes --------------------------------------------

double shape_2012_D6T_RSG_qq_500[50] =  {
0.00019852, 0.000218798, 0.000241482, 0.000266897, 0.000295421, 0.000327487, 0.0003636, 0.000404342, 0.000450394, 0.000502548, 0.000561729, 0.000629022, 0.000705702, 0.000793269, 0.000893495, 0.00100848, 0.00114071, 0.00129317, 0.0014694, 0.00167365, 0.00191106, 0.00218781, 0.00251138, 0.0028909, 0.0033375, 0.00386483, 0.00448971, 0.00523295, 0.00612038, 0.00718431, 0.00846526, 0.0100144, 0.0118811, 0.0134051, 0.0139896, 0.0135038, 0.0120565, 0.00995651, 0.00760516, 0.00564277, 0.00435619, 0.00346847, 0.00282959, 0.0023541, 0.00199043, 0.0017059, 0.00147899, 0.00129505, 0.00114382, 0.00101793};

double shape_2012_D6T_RSG_qq_700[50] = {
0.000147192, 0.000161313, 0.00017705, 0.000194619, 0.000214269, 0.000236288, 0.00026101, 0.000288822, 0.000320175, 0.000355598, 0.000395709, 0.000441232, 0.000493025, 0.000552097, 0.000619647, 0.000697103, 0.000786168, 0.000888883, 0.00100771, 0.0011456, 0.00130617, 0.00149379, 0.00171383, 0.00197289, 0.00227912, 0.00264263, 0.00307608, 0.00359536, 0.00422055, 0.0049772, 0.00589804, 0.0070253, 0.00841388, 0.0101097, 0.0112484, 0.0111548, 0.00985931, 0.00776693, 0.00552, 0.00400244, 0.00302494, 0.00236047, 0.00188938, 0.00154392, 0.00128348, 0.00108252, 0.000924398, 0.000797859, 0.000695102, 0.00061058};

double shape_2012_D6T_RSG_qq_1200[50] = {
8.67949e-05, 9.43422e-05, 0.000102715, 0.000112023, 0.000122394, 0.000133974, 0.000146935, 0.000161477, 0.000177834, 0.000196284, 0.000217151, 0.000240822, 0.000267757, 0.000298503, 0.000333721, 0.000374204, 0.000420916, 0.000475031, 0.000537984, 0.000611547, 0.000697914, 0.000799825, 0.00092072, 0.00106496, 0.00123809, 0.00144728, 0.0017018, 0.00201382, 0.00239948, 0.00288038, 0.00348584, 0.00425614, 0.0052475, 0.00653793, 0.00755397, 0.00754961, 0.00652663, 0.00488054, 0.00323798, 0.00221848, 0.00159136, 0.0011833, 0.000905696, 0.000709899, 0.000567608, 0.000461566, 0.000380823, 0.000318191, 0.000268816, 0.000229334};

double shape_2012_D6T_RSG_qq_2000[50] = {
6.32266e-05, 6.77504e-05, 7.27181e-05, 7.81857e-05, 8.4218e-05, 9.08898e-05, 9.82886e-05, 0.000106516, 0.000115693, 0.000125959, 0.000137482, 0.000150461, 0.000165134, 0.000181788, 0.000200769, 0.000222499, 0.000247496, 0.0002764, 0.000310007, 0.000349317, 0.000395596, 0.000450465, 0.000516019, 0.000594997, 0.000691032, 0.000809002, 0.000955567, 0.00113997, 0.0013753, 0.00168047, 0.00208355, 0.0026273, 0.00337911, 0.0044468, 0.00532478, 0.00529349, 0.00436887, 0.00299353, 0.0017042, 0.000976101, 0.000625352, 0.000431603, 0.00031412, 0.000237891, 0.000185817, 0.000148775, 0.00012155, 0.000100994, 8.51186e-05, 7.26207e-05};

double shape_2012_D6T_RSG_qq_3500[50] = {
6.20594e-05, 6.52786e-05, 6.87594e-05, 7.2531e-05, 7.6627e-05, 8.10861e-05, 8.59529e-05, 9.1279e-05, 9.71248e-05, 0.000103561, 0.000110669, 0.000118549, 0.000127316, 0.000137111, 0.000148101, 0.000160492, 0.000174535, 0.000190538, 0.00020889, 0.000230076, 0.000254718, 0.000283618, 0.000317827, 0.000358743, 0.000408259, 0.000468993, 0.000544644, 0.000640585, 0.000764864, 0.000929984, 0.00115625, 0.00147846, 0.00196047, 0.0027145, 0.00327497, 0.00313733, 0.00238643, 0.00144137, 0.00069125, 0.000300555, 0.000172772, 0.000115855, 8.47255e-05, 6.55106e-05, 5.26595e-05, 4.3559e-05, 3.68323e-05, 3.16915e-05, 2.76565e-05, 2.44195e-05};

double shape_2012_D6T_RSG_qq_4500[50] = {
0.000162024, 0.000164993, 0.000168111, 0.000171394, 0.000174854, 0.000178509, 0.000182376, 0.000186476, 0.000190834, 0.000195477, 0.000200436, 0.000205748, 0.000211456, 0.00021761, 0.000224269, 0.000231506, 0.000239406, 0.000248074, 0.000257639, 0.000268264, 0.000280154, 0.000293574, 0.000308872, 0.000326517, 0.000347159, 0.000371725, 0.000401595, 0.000438925, 0.000487318, 0.000553338, 0.000650575, 0.000813383, 0.00116863, 0.00174682, 0.00205018, 0.00188851, 0.00136532, 0.000774701, 0.000345, 0.000120584, 6.30241e-05, 5.17896e-05, 4.60627e-05, 4.23592e-05, 3.96817e-05, 3.76145e-05, 3.59479e-05, 3.45621e-05, 3.33829e-05, 3.23614e-05};


double shape_2012_D6T_RSG_gg_500[50] = {
0.00148374, 0.00156162, 0.00164372, 0.00173029, 0.00182156, 0.00191781, 0.00201931, 0.00212637, 0.00223929, 0.00235841, 0.00248408, 0.00261666, 0.00275656, 0.00290419, 0.00305998, 0.00322442, 0.00339798, 0.0035812, 0.00377463, 0.00397886, 0.0041945, 0.00442222, 0.00466272, 0.00491674, 0.00518505, 0.0054685, 0.00576796, 0.00608437, 0.00641871, 0.00677204, 0.00714547, 0.00754018, 0.00795742, 0.00839852, 0.00736142, 0.00630416, 0.0049944, 0.00378282, 0.002982, 0.0024299, 0.00203019, 0.00172974, 0.00149711, 0.0013126, 0.00116331, 0.00104048, 0.000937971, 0.00085135, 0.000777366, 0.000713574};

double shape_2012_D6T_RSG_gg_700[50] = {
0.000890822, 0.000941009, 0.000994363, 0.00105111, 0.00111148, 0.00117573, 0.00124415, 0.00131703, 0.00139469, 0.00147748, 0.00156578, 0.00165999, 0.00176056, 0.00186796, 0.00198269, 0.00210533, 0.00223647, 0.00237676, 0.00252692, 0.00268772, 0.00285999, 0.00304464, 0.00324265, 0.00345511, 0.00368317, 0.00392812, 0.00419133, 0.00447433, 0.00477876, 0.00510642, 0.00545928, 0.00583949, 0.00624942, 0.00669163, 0.00654649, 0.00577097, 0.00456315, 0.00325756, 0.00237403, 0.00182069, 0.0014487, 0.00118525, 0.000991069, 0.000843346, 0.000728043, 0.000636114, 0.000561497, 0.000500001, 0.000448646, 0.000405264};

double shape_2012_D6T_RSG_gg_1200[50] = {
0.000438896, 0.000461342, 0.000485375, 0.000511138, 0.000538793, 0.000568518, 0.000600512, 0.000634998, 0.000672228, 0.000712482, 0.000756078, 0.000803374, 0.000854775, 0.000910742, 0.000971799, 0.00103855, 0.00111167, 0.00119195, 0.00128031, 0.0013778, 0.00148564, 0.00160526, 0.00173833, 0.00188682, 0.00205306, 0.00223982, 0.00245039, 0.00268874, 0.00295968, 0.00326903, 0.00362394, 0.00403323, 0.00450784, 0.00506153, 0.00528205, 0.00468435, 0.00353004, 0.00226576, 0.00146025, 0.00101798, 0.000749527, 0.000574537, 0.000454216, 0.000367983, 0.000304094, 0.000255459, 0.000217587, 0.000187527, 0.000163272, 0.00014342};

double shape_2012_D6T_RSG_gg_2000[50] = {
0.000166376, 0.000177703, 0.000190008, 0.000203395, 0.000217978, 0.000233888, 0.000251273, 0.0002703, 0.000291157, 0.00031406, 0.000339253, 0.000367018, 0.000397675, 0.000431592, 0.000469193, 0.000510969, 0.000557487, 0.000609407, 0.000667498, 0.00073266, 0.000805949, 0.00088861, 0.000982117, 0.00108822, 0.00120901, 0.00134698, 0.00150515, 0.00168717, 0.00189748, 0.00214152, 0.00242596, 0.0027591, 0.00315127, 0.00361547, 0.00396818, 0.0034971, 0.00243649, 0.00134338, 0.000741958, 0.000466096, 0.000318056, 0.000229926, 0.000173438, 0.000135172, 0.00010811, 8.83021e-05, 7.33884e-05, 6.1893e-05, 5.28542e-05, 4.56248e-05};

double shape_2012_D6T_RSG_gg_3500[50] = {
8.9965e-05, 9.58147e-05, 0.000102171, 0.000109091, 0.000116635, 0.000124876, 0.000133895, 0.000143784, 0.000154649, 0.000166613, 0.000179815, 0.000194418, 0.000210611, 0.000228611, 0.000248676, 0.000271105, 0.000296252, 0.000324536, 0.000356454, 0.000392602, 0.000433692, 0.000480586, 0.000534333, 0.000596211, 0.000667795, 0.000751035, 0.000848369, 0.000962864, 0.00109841, 0.00126001, 0.00145414, 0.00168926, 0.00197662, 0.00233134, 0.00262806, 0.00220953, 0.00134333, 0.000590587, 0.000242943, 0.000135283, 8.78184e-05, 6.23425e-05, 4.69328e-05, 3.68291e-05, 2.98075e-05, 2.47082e-05, 2.08752e-05, 1.79128e-05, 1.55706e-05, 1.3683e-05};

double shape_2012_D6T_RSG_gg_4500[50] = {
0.00020025, 0.00020442, 0.000208806, 0.000213429, 0.000218307, 0.000223465, 0.000228929, 0.000234729, 0.000240898, 0.000247476, 0.000254507, 0.000262043, 0.000270144, 0.000278881, 0.000288336, 0.000298607, 0.000309814, 0.000322098, 0.000335635, 0.000350639, 0.000367381, 0.000386203, 0.000407548, 0.000432, 0.000460342, 0.000493661, 0.000533503, 0.00058216, 0.000643195, 0.000722486, 0.000830569, 0.000988578, 0.00124694, 0.00167819, 0.00176191, 0.0013423, 0.000742064, 0.000297685, 9.8846e-05, 5.83949e-05, 4.31546e-05, 3.48718e-05, 2.95766e-05, 2.58609e-05, 2.30901e-05, 2.09335e-05, 1.92005e-05, 1.77731e-05, 1.65742e-05, 1.55509e-05};


double shape_2012_D6T_Qstar_qg_500[50] = {
0.000474014, 0.000512516, 0.00055468, 0.000600907, 0.000651648, 0.000707408, 0.000768761, 0.00083635, 0.000910905, 0.000993254, 0.00108433, 0.00118521, 0.0012971, 0.00142138, 0.00155964, 0.00171369, 0.00188561, 0.00207778, 0.00229297, 0.00253435, 0.0028056, 0.00311099, 0.00345547, 0.00384483, 0.00428583, 0.00478637, 0.00535576, 0.00600494, 0.00674685, 0.00759683, 0.00857309, 0.00969736, 0.0109442, 0.0117227, 0.0117579, 0.0110431, 0.00971211, 0.00799822, 0.00616782, 0.00459911, 0.00356295, 0.00284879, 0.00233454, 0.00195126, 0.00165749, 0.00142707, 0.00124282, 0.00109302, 0.000969493, 0.000866358};

double shape_2012_D6T_Qstar_qg_700[50] = {
0.000347153, 0.000372359, 0.000399863, 0.000429918, 0.000462811, 0.000498868, 0.000538456, 0.000581995, 0.000629963, 0.000682907, 0.000741454, 0.000806322, 0.000878341, 0.00095847, 0.00104782, 0.00114767, 0.00125954, 0.00138519, 0.00152667, 0.00168642, 0.00186733, 0.0020728, 0.00230692, 0.00257455, 0.00288157, 0.00323508, 0.0036437, 0.00411794, 0.00467076, 0.00531813, 0.00607994, 0.0069811, 0.008053, 0.00911178, 0.00948784, 0.00906107, 0.00793668, 0.00637598, 0.00469788, 0.00334527, 0.00250686, 0.00195304, 0.00156733, 0.00128749, 0.00107775, 0.000916316, 0.000789301, 0.000687486, 0.000604561, 0.000536084};

double shape_2012_D6T_Qstar_qg_1200[50] = {
0.000207544, 0.000220572, 0.000234724, 0.000250125, 0.000266915, 0.000285257, 0.000305335, 0.000327359, 0.000351574, 0.00037826, 0.000407743, 0.0004404, 0.000476674, 0.000517081, 0.000562232, 0.000612848, 0.000669787, 0.000734072, 0.000806935, 0.000889866, 0.000984674, 0.00109358, 0.00121932, 0.00136529, 0.00153577, 0.00173614, 0.00197331, 0.00225617, 0.00259637, 0.00300928, 0.00351556, 0.00414334, 0.00493164, 0.00592834, 0.00658885, 0.00640681, 0.00545041, 0.0040567, 0.00272126, 0.00189897, 0.00138728, 0.00105005, 0.00081758, 0.000651414, 0.000529059, 0.000436694, 0.000365478, 0.000309561, 0.000264959, 0.000228884};

double shape_2012_D6T_Qstar_qg_2000[50] = {
0.000129518, 0.000136957, 0.000145016, 0.000153764, 0.000163279, 0.000173651, 0.000184981, 0.000197388, 0.000211007, 0.000225998, 0.000242544, 0.000260861, 0.000281201, 0.000303863, 0.000329203, 0.000357646, 0.000389699, 0.000425981, 0.000467243, 0.000514404, 0.000568606, 0.000631271, 0.00070419, 0.000789646, 0.000890575, 0.00101081, 0.0011554, 0.00133115, 0.00154733, 0.00181683, 0.00215801, 0.00259761, 0.00317574, 0.00395213, 0.00449305, 0.00430283, 0.00347113, 0.00235879, 0.00149358, 0.000998941, 0.000697787, 0.000504772, 0.000375799, 0.000286594, 0.000223075, 0.000176712, 0.000142137, 0.000115868, 9.55784e-05, 7.9677e-05};

double shape_2012_D6T_Qstar_qg_3500[50] =  {
0.000127319, 0.000132553, 0.000138149, 0.000144143, 0.000150578, 0.000157497, 0.000164955, 0.00017301, 0.000181733, 0.000191201, 0.000201508, 0.00021276, 0.000225081, 0.00023862, 0.000253549, 0.000270076, 0.000288449, 0.000308968, 0.000331998, 0.000357989, 0.000387497, 0.000421221, 0.000460049, 0.000505122, 0.000557933, 0.00062046, 0.000695381, 0.000786402, 0.000898772, 0.00104016, 0.00122214, 0.00146299, 0.00179297, 0.00226433, 0.00258462, 0.00240056, 0.0018142, 0.00111562, 0.000585132, 0.000334875, 0.000209651, 0.000140048, 9.82558e-05, 7.16343e-05, 5.38642e-05, 4.15437e-05, 3.27288e-05, 2.62532e-05, 2.13876e-05, 1.76597e-05};

double shape_2012_D6T_Qstar_qg_4500[50] = {
0.000307076, 0.00030931, 0.000311636, 0.00031406, 0.00031659, 0.000319234, 0.000322003, 0.000324907, 0.00032796, 0.000331174, 0.000334568, 0.000338159, 0.00034197, 0.000346026, 0.000350357, 0.000355, 0.000359998, 0.000365402, 0.000371279, 0.000377708, 0.00038479, 0.00039266, 0.000401489, 0.000411516, 0.000423072, 0.000436641, 0.000452966, 0.000473269, 0.000499754, 0.000537002, 0.000597074, 0.000733935, 0.0010669, 0.00131642, 0.00136236, 0.00118255, 0.000860937, 0.000525717, 0.000269253, 0.000130039, 7.62212e-05, 5.03467e-05, 3.58704e-05, 2.69281e-05, 2.10041e-05, 1.68697e-05, 1.38656e-05, 1.16114e-05, 9.87483e-06, 8.50756e-06};




double bincenter[50]={
  0.31,  0.33,  0.35,  0.37,  0.39,  0.41,  0.43,  0.45,  0.47,  0.49,
  0.51,  0.53,  0.55,  0.57,  0.59,  0.61,  0.63,  0.65,  0.67,  0.69,
  0.71,  0.73,  0.75,  0.77,  0.79,  0.81,  0.83,  0.85,  0.87,  0.89,
  0.91,  0.93,  0.95,  0.97,  0.99,  1.01,  1.03,  1.05,  1.07,  1.09,
  1.11,  1.13,  1.15,  1.17,  1.19,  1.21,  1.23,  1.25,  1.27,  1.29};


std::vector<double> v;

std::vector<double> mqstar;

std::vector<double> vmBH;

const unsigned int nMassBins = 103;
double massBoundaries[nMassBins+1] = {1, 3, 6, 10, 16, 23, 31, 40, 50, 61, 74, 88, 103, 119, 137, 156, 176, 197, 220, 244, 270, 296, 325,
				      354, 386, 419, 453, 489, 526, 565, 606, 649, 693, 740, 788, 838, 890, 944, 1000, 1058, 1118, 1181, 1246, 1313, 1383, 1455, 1530, 1607, 1687,
				      1770, 1856, 1945, 2037, 2132, 2231, 2332, 2438, 2546, 2659, 2775, 2895, 3019, 3147, 3279, 3416, 3558, 3704, 3854, 4010, 4171, 4337, 4509,
				      4686, 4869, 5058, 5253, 5455, 5663, 5877, 6099, 6328, 6564, 6808, 7060, 7320, 7589, 7866, 8152, 8447, 8752, 9067, 9391, 9726, 10072, 10430, 
				      10798, 11179, 11571, 11977, 12395, 12827, 13272, 13732, 14000};

double binwidth[nMassBins+1] = {2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 26, 29, 29, 32, 33, 34, 36, 37, 39, 41, 43, 
				44, 47, 48, 50, 52, 54, 56, 58, 60, 63, 65, 67, 70, 72, 75, 77, 80, 83, 86, 89, 92, 95, 99, 101, 106, 108, 113, 116, 120, 124, 128, 132, 137, 142, 146,
				150, 156, 161, 166, 172, 177, 183, 189, 195, 202, 208, 214, 222, 229, 236, 244, 252, 260, 269, 277, 286, 295, 305, 315, 324, 335, 346, 358, 368, 381, 
				392, 406, 418, 432, 445, 460, 268};

double massnew[nMassBins+1];
double FoundQstarBinnedProb[nMassBins+1];

const unsigned int n = 50;
double x[n];
double y[n];
double f[n];


void LineShapeDensity_pdf(double mass, int iResonance){


  TArrayD *dv500, *dv700, *dv750, *dv1000, *dv1200, *dv1250, *dv1500, *dv2000, *dv2500, *dv3000, *dv3500, *dv4000, *dv4500, *dv5000;

  std::cout << "iResonance = " << iResonance << std::endl;

  switch (iResonance){

  case 11: 
    std::cout << "RSGraviton_ak5_GGtoGG_fat30" << std::endl;
    dv500 = new TArrayD(50,  RSGravitonToJJ_M_500_TuneD6T_ak5GGtoGG_fat30);
    dv700 = new TArrayD(50,  RSGravitonToJJ_M_700_TuneD6T_ak5GGtoGG_fat30);
    dv1200 = new TArrayD(50, RSGravitonToJJ_M_1200_TuneD6T_ak5GGtoGG_fat30);
    dv2000 = new TArrayD(50, RSGravitonToJJ_M_2000_TuneD6T_ak5GGtoGG_fat30);
    dv3500 = new TArrayD(50, RSGravitonToJJ_M_3500_TuneD6T_ak5GGtoGG_fat30);
    dv4000 = new TArrayD(50, RSGravitonToJJ_M_4000_TuneD6T_ak5GGtoGG_fat30);
    break;
  case 12:   
    std::cout << "RSGraviton_ak5_QQtoQQ_fat30" << std::endl;
    dv500 = new TArrayD(50,  RSGravitonToJJ_M_500_TuneD6T_ak5QQtoQQ_fat30);
    dv700 = new TArrayD(50,  RSGravitonToJJ_M_700_TuneD6T_ak5QQtoQQ_fat30);
    dv1200 = new TArrayD(50, RSGravitonToJJ_M_1200_TuneD6T_ak5QQtoQQ_fat30);
    dv2000 = new TArrayD(50, RSGravitonToJJ_M_2000_TuneD6T_ak5QQtoQQ_fat30);
    dv3500 = new TArrayD(50, RSGravitonToJJ_M_3500_TuneD6T_ak5QQtoQQ_fat30);
    dv4000 = new TArrayD(50, RSGravitonToJJ_M_4000_TuneD6T_ak5QQtoQQ_fat30);
    break;
  case 13:   
    std::cout << "Qstar_ak5_fat30" << std::endl; 
    dv500 = new TArrayD(50,  QstarToJJ_M_500_TuneD6T_ak5_fat30);
    dv700 = new TArrayD(50,  QstarToJJ_M_700_TuneD6T_ak5_fat30);
    dv1200 = new TArrayD(50, QstarToJJ_M_1200_TuneD6T_ak5_fat30);
    dv2000 = new TArrayD(50, QstarToJJ_M_2000_TuneD6T_ak5_fat30);
    dv3500 = new TArrayD(50, QstarToJJ_M_3500_TuneD6T_ak5_fat30);
    dv4000 = new TArrayD(50, QstarToJJ_M_4000_TuneD6T_ak5_fat30);
    break;
  case 21: 
    std::cout << "RSGraviton_HLT_ak5_GGtoGG_fat30" << std::endl;
    dv500 = new TArrayD(50,  finalResults_RSGravitonToJJ_M_700_gg_M_FatPFJet1FatPFJet2_shifted_2);
    dv700 = new TArrayD(50,  finalResults_RSGravitonToJJ_M_700_gg_M_FatPFJet1FatPFJet2_shifted_2);
    dv1200 = new TArrayD(50, finalResults_RSGravitonToJJ_M_1200_gg_M_FatPFJet1FatPFJet2_shifted_3);
    dv2000 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_gg_M_FatPFJet1FatPFJet2_shifted_4);
    dv3500 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_gg_M_FatPFJet1FatPFJet2_shifted_4);
    dv4000 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_gg_M_FatPFJet1FatPFJet2_shifted_4);
    break;
  case 22:   
    std::cout << "RSGraviton_HLT_ak5_QQtoQQ_fat30" << std::endl;
    dv500 = new TArrayD(50,  finalResults_RSGravitonToJJ_M_700_qq_M_FatPFJet1FatPFJet2_shifted_2);
    dv700 = new TArrayD(50,  finalResults_RSGravitonToJJ_M_700_qq_M_FatPFJet1FatPFJet2_shifted_2);
    dv1200 = new TArrayD(50, finalResults_RSGravitonToJJ_M_1200_qq_M_FatPFJet1FatPFJet2_shifted_3);
    dv2000 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_qq_M_FatPFJet1FatPFJet2_shifted_4);
    dv3500 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_qq_M_FatPFJet1FatPFJet2_shifted_4);
    dv4000 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_qq_M_FatPFJet1FatPFJet2_shifted_4);
    break;
  case 23:   
    std::cout << "Qstar_HLT_ak5_fat30" << std::endl; 
    dv500 = new TArrayD(50,  finalResults_QstarToJJ_M_700_qg_M_FatPFJet1FatPFJet2_shifted_2);
    dv700 = new TArrayD(50,  finalResults_QstarToJJ_M_700_qg_M_FatPFJet1FatPFJet2_shifted_2);
    dv1200 = new TArrayD(50, finalResults_QstarToJJ_M_1200_qg_M_FatPFJet1FatPFJet2_shifted_3);
    dv2000 = new TArrayD(50, finalResults_QstarToJJ_M_2000_qg_M_FatPFJet1FatPFJet2_shifted_4);
    dv3500 = new TArrayD(50, finalResults_QstarToJJ_M_2000_qg_M_FatPFJet1FatPFJet2_shifted_4);
    dv4000 = new TArrayD(50, finalResults_QstarToJJ_M_2000_qg_M_FatPFJet1FatPFJet2_shifted_4);
    break;
  case 121: 
    std::cout << "RSGraviton_HLT_ak5_GGtoGG_pf" << std::endl;
    dv500 = new TArrayD(50,  finalResults_RSGravitonToJJ_M_700_gg_M_PFJet1PFJet2_shifted_2);
    dv700 = new TArrayD(50,  finalResults_RSGravitonToJJ_M_700_gg_M_PFJet1PFJet2_shifted_2);
    dv1200 = new TArrayD(50, finalResults_RSGravitonToJJ_M_1200_gg_M_PFJet1PFJet2_shifted_3);
    dv2000 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_gg_M_PFJet1PFJet2_shifted_4);
    dv3500 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_gg_M_PFJet1PFJet2_shifted_4);
    dv4000 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_gg_M_PFJet1PFJet2_shifted_4);
    break;
  case 122:       
    std::cout << "RSGraviton_HLT_ak5_QQtoQQ_pf" << std::endl;
    // Not available so just copy and paste
    dv500 = new TArrayD(50,  finalResults_RSGravitonToJJ_M_700_qq_M_PFJet1PFJet2_shifted_2);
    dv700 = new TArrayD(50,  finalResults_RSGravitonToJJ_M_700_qq_M_PFJet1PFJet2_shifted_2);
    dv1200 = new TArrayD(50, finalResults_RSGravitonToJJ_M_1200_qq_M_PFJet1PFJet2_shifted_3);
    dv2000 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_qq_M_PFJet1PFJet2_shifted_4);
    // Not used in this fit so just add it
    dv3500 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_qq_M_PFJet1PFJet2_shifted_4);
    dv4000 = new TArrayD(50, finalResults_RSGravitonToJJ_M_2000_qq_M_PFJet1PFJet2_shifted_4);
    break;
  case 123:   
    std::cout << "Qstar_HLT_ak5_pf" << std::endl; 
    dv500 = new TArrayD(50,  finalResults_QstarToJJ_M_700_qg_M_PFJet1PFJet2_shifted_2);
    dv700 = new TArrayD(50,  finalResults_QstarToJJ_M_700_qg_M_PFJet1PFJet2_shifted_2);
    dv1200 = new TArrayD(50, finalResults_QstarToJJ_M_1200_qg_M_PFJet1PFJet2_shifted_3);
    dv2000 = new TArrayD(50, finalResults_QstarToJJ_M_2000_qg_M_PFJet1PFJet2_shifted_4);
    dv3500 = new TArrayD(50, finalResults_QstarToJJ_M_2000_qg_M_PFJet1PFJet2_shifted_4);
    dv4000 = new TArrayD(50, finalResults_QstarToJJ_M_2000_qg_M_PFJet1PFJet2_shifted_4);
    std::cout << "End of sample filling" << std::endl;
    break;
  case 201:
      {
      std::cout << "ZprimeToTTbar" << std::endl;
      TFile* TTbar = new TFile("../data/Zprime_to_TTBar.root");
    
      TH1D* h500 = (TH1D*) TTbar->Get("histograms_ZprimeToTTbar_histograms_ZprimeToTTbar_500;1"); dv500 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv500->AddAt(h500->GetBinContent(i), i-1);
      TH1D* h750 = (TH1D*) TTbar->Get("histograms_ZprimeToTTbar_histograms_ZprimeToTTbar_750;1"); dv750 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv750->AddAt(h750->GetBinContent(i), i-1);
      TH1D* h1000 = (TH1D*) TTbar->Get("histograms_ZprimeToTTbar_histograms_ZprimeToTTbar_1000;1"); dv1000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv1000->AddAt(h1000->GetBinContent(i), i-1);
      TH1D* h1250 = (TH1D*) TTbar->Get("histograms_ZprimeToTTbar_histograms_ZprimeToTTbar_1250;1"); dv1250 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv1250->AddAt(h1250->GetBinContent(i), i-1);
      TH1D* h1500 = (TH1D*) TTbar->Get("histograms_ZprimeToTTbar_histograms_ZprimeToTTbar_1500;1"); dv1500 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv1500->AddAt(h1500->GetBinContent(i), i-1);
  
      TTbar->Close();
    }
    break;
  case 1005:
  case 1006:
  case 1007:
  case 1008:
  case 1009:
  case 1010:
    {
      std::cout << "QBH_ak5_fat" << std::endl; 
      TFile* QBH = new TFile("../data/histograms_qbh_All.root");
      
      int nDim = iResonance-1000;

      TH1D* h11 = (TH1D*) QBH->Get(Form("histograms_qbh%d11_ak5;1",nDim)); dv1000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv1000->AddAt(h11->GetBinContent(i), i-1);
      TH1D* h22 = (TH1D*) QBH->Get(Form("histograms_qbh%d22_ak5;1",nDim)); dv2000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv2000->AddAt(h22->GetBinContent(i), i-1);
      TH1D* h33 = (TH1D*) QBH->Get(Form("histograms_qbh%d33_ak5;1",nDim)); dv3000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv3000->AddAt(h33->GetBinContent(i), i-1);
      TH1D* h44 = (TH1D*) QBH->Get(Form("histograms_qbh%d44_ak5;1",nDim)); dv4000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv4000->AddAt(h44->GetBinContent(i), i-1);
      TH1D* h55 = (TH1D*) QBH->Get(Form("histograms_qbh%d55_ak5;1",nDim)); dv5000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv5000->AddAt(h55->GetBinContent(i), i-1);
      
      QBH->Close();   
    } 
    break;
  case 1502:
  case 1503:
  case 1504:
  case 1505:
  case 1602:
  case 1603:
  case 1604:
  case 1605:
  case 1702:
  case 1703:
  case 1704:
  case 1705:
  case 1802:
  case 1803:
  case 1804:
  case 1805:
  case 1902:
  case 1903:
  case 1904:
  case 1905:
  case 1102:
  case 1103:
  case 1104:
  case 1105:
    {
      vmBH.clear();
      vyBH->Clear();

      std::cout << "QBH_ak5_fat" << std::endl; 
      TFile* QBH = new TFile("../data/histograms_qbh_Full.root");
      
      int nDim = (iResonance-1000)/100;
      int mD = (iResonance-1000) - nDim*100;

      if (nDim == 1) nDim = 10;

      //histograms_qbh9235_ak5;1

      for (int imBH = mD*2; imBH < 13; imBH++){
	int mBH = imBH*5;
	if (imBH == mD*2) mBH = mD;
	TH1D* hmBH = (TH1D*) QBH->Get(Form("histograms_qbh%d%d%d_ak5;1",nDim,mD,mBH)); 
	TArrayD* dvmDmBH = new TArrayD(50);
	for (int i = 1; i < 51; i++) dvmDmBH->AddAt(hmBH->GetBinContent(i), i-1);
	vmBH.push_back(imBH*500);
	vyBH->Add((TObject*) dvmDmBH);

	std::cout << Form("histograms_qbh%d%d%d_ak5;1",nDim,mD,mBH) << " mass = " << imBH*500 << std::endl;

      }

      QBH->Close();   
    } 
    break;
  case 2001:
    std::cout << "Qstar_qW_ak5_fat" << std::endl; 
    dv750 = new TArrayD(50,  Qstar_qW_75TeV_ak5_fat);
    dv1500 = new TArrayD(50,  Qstar_qW_15TeV_ak5_fat);
    dv3000 = new TArrayD(50,  Qstar_qW_3TeV_ak5_fat);
    break;
  case 2002:
    std::cout << "Qstar_qZ_ak5_fat" << std::endl; 
    dv750 = new TArrayD(50,  Qstar_qZ_75TeV_ak5_fat);
    dv1500 = new TArrayD(50,  Qstar_qZ_15TeV_ak5_fat);
    dv3000 = new TArrayD(50,  Qstar_qZ_3TeV_ak5_fat);
    break;
  case 2011:
    std::cout << "RSGraviton_WW_ak5_fat" << std::endl; 
    dv1000 = new TArrayD(50,  RSGraviton_WW_1TeV_ak5_fat);
    dv1500 = new TArrayD(50,  RSGraviton_WW_15TeV_ak5_fat);
    dv2000 = new TArrayD(50,  RSGraviton_WW_2TeV_ak5_fat);
    dv3000 = new TArrayD(50,  RSGraviton_WW_3TeV_ak5_fat);
    break;
  case 2012:
    std::cout << "RSGraviton_WZ_ak5_fat" << std::endl; 
    dv1000 = new TArrayD(50,  RSGraviton_WZ_1TeV_ak5_fat);
    dv1500 = new TArrayD(50,  RSGraviton_WZ_15TeV_ak5_fat);
    dv2000 = new TArrayD(50,  RSGraviton_WZ_2TeV_ak5_fat);
    dv3000 = new TArrayD(50,  RSGraviton_WZ_3TeV_ak5_fat);
    break;
  case 2013:
    std::cout << "RSGraviton_ZZ_ak5_fat" << std::endl; 
    dv1000 = new TArrayD(50,  RSGraviton_ZZ_1TeV_ak5_fat);
    dv1500 = new TArrayD(50,  RSGraviton_ZZ_15TeV_ak5_fat);
    dv2000 = new TArrayD(50,  RSGraviton_ZZ_2TeV_ak5_fat);
    dv3000 = new TArrayD(50,  RSGraviton_ZZ_3TeV_ak5_fat);
    break;
  case 2014:
    std::cout << "RSGraviton_ZZ_01_ak5_fat" << std::endl; 
    dv1000 = new TArrayD(50,  RSGraviton_ZZ_01_1TeV_ak5_fat);
    dv1500 = new TArrayD(50,  RSGraviton_ZZ_01_15TeV_ak5_fat);
    dv2000 = new TArrayD(50,  RSGraviton_ZZ_01_2TeV_ak5_fat);
    dv3000 = new TArrayD(50,  RSGraviton_ZZ_01_3TeV_ak5_fat);
    break;
  case 3111:
  case 3311:
  case 3511:
  case 3711:
  case 3911:
    {
      std::cout << "RSGravitonGG_fat30_ak5" << std::endl; 
      TFile* RSGravitonToGG = new TFile("../data/histograms_RSGravitonToGG_TuneZ2_7TeV_pythia6_FASTSIM_ak5.root");
      
      int k = (iResonance-3011)/100;

      std::cout << "k = " << k << std::endl; 

      TH1D* h10 = (TH1D*) RSGravitonToGG->Get(Form("kMpl_0p%d_M_1000;1",k)); dv1000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv1000->AddAt(h10->GetBinContent(i), i-1);
      TH1D* h15 = (TH1D*) RSGravitonToGG->Get(Form("kMpl_0p%d_M_1500;1",k)); dv1500 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv1500->AddAt(h15->GetBinContent(i), i-1);
      TH1D* h20 = (TH1D*) RSGravitonToGG->Get(Form("kMpl_0p%d_M_2000;1",k)); dv2000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv2000->AddAt(h20->GetBinContent(i), i-1);
      TH1D* h25 = (TH1D*) RSGravitonToGG->Get(Form("kMpl_0p%d_M_2500;1",k)); dv2500 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv2500->AddAt(h25->GetBinContent(i), i-1);
      TH1D* h30 = (TH1D*) RSGravitonToGG->Get(Form("kMpl_0p%d_M_3000;1",k)); dv3000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv3000->AddAt(h30->GetBinContent(i), i-1);
      
      RSGravitonToGG->Close();   
    } 
    break;

  case 3112:
  case 3312:
  case 3512:
  case 3712:
  case 3912:
    {
      std::cout << "RSGravitonQQ_fat30_ak5" << std::endl; 
      TFile* RSGravitonToQQ = new TFile("../data/histograms_RSGravitonToQQ_TuneZ2_7TeV_pythia6_FASTSIM_ak5.root");
      
      int k = (iResonance-3012)/100;

      std::cout << "k = " << k << std::endl; 

      TH1D* h10 = (TH1D*) RSGravitonToQQ->Get(Form("kMpl_0p%d_M_1000;1",k)); dv1000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv1000->AddAt(h10->GetBinContent(i), i-1);
      TH1D* h15 = (TH1D*) RSGravitonToQQ->Get(Form("kMpl_0p%d_M_1500;1",k)); dv1500 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv1500->AddAt(h15->GetBinContent(i), i-1);
      TH1D* h20 = (TH1D*) RSGravitonToQQ->Get(Form("kMpl_0p%d_M_2000;1",k)); dv2000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv2000->AddAt(h20->GetBinContent(i), i-1);
      TH1D* h25 = (TH1D*) RSGravitonToQQ->Get(Form("kMpl_0p%d_M_2500;1",k)); dv2500 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv2500->AddAt(h25->GetBinContent(i), i-1);
      TH1D* h30 = (TH1D*) RSGravitonToQQ->Get(Form("kMpl_0p%d_M_3000;1",k)); dv3000 = new TArrayD(50);
      for (int i = 1; i < 51; i++) dv3000->AddAt(h30->GetBinContent(i), i-1);
      
      RSGravitonToQQ->Close();   
    } 
    break;

  case 4011: 
    std::cout << "RSGraviton_2012_Z2star_ak5_GGtoGG_fat30" << std::endl;
    dv500 = new TArrayD(50,  shape_2012_Z2star_RSG_gg_500);
    dv700 = new TArrayD(50,  shape_2012_Z2star_RSG_gg_700);
    dv1200 = new TArrayD(50, shape_2012_Z2star_RSG_gg_1200);
    dv2000 = new TArrayD(50, shape_2012_Z2star_RSG_gg_2000);
    dv3500 = new TArrayD(50, shape_2012_Z2star_RSG_gg_3500);
    dv4500 = new TArrayD(50, shape_2012_Z2star_RSG_gg_4500);
    break;
  case 4012:   
    std::cout << "RSGraviton_2012_Z2star_ak5_QQtoQQ_fat30" << std::endl;
    dv500 = new TArrayD(50,  shape_2012_Z2star_RSG_qq_500);
    dv700 = new TArrayD(50,  shape_2012_Z2star_RSG_qq_700);
    dv1200 = new TArrayD(50, shape_2012_Z2star_RSG_qq_1200);
    dv2000 = new TArrayD(50, shape_2012_Z2star_RSG_qq_2000);
    dv3500 = new TArrayD(50, shape_2012_Z2star_RSG_qq_3500);
    dv4500 = new TArrayD(50, shape_2012_Z2star_RSG_qq_4500);
    break;
  case 4013:   
    std::cout << "Qstar_2012_Z2star_ak5_fat30" << std::endl; 
    dv500 = new TArrayD(50,  shape_2012_Z2star_Qstar_qg_500);
    dv700 = new TArrayD(50,  shape_2012_Z2star_Qstar_qg_700);
    dv1200 = new TArrayD(50, shape_2012_Z2star_Qstar_qg_1200);
    dv2000 = new TArrayD(50, shape_2012_Z2star_Qstar_qg_2000);
    dv3500 = new TArrayD(50, shape_2012_Z2star_Qstar_qg_3500);
    dv4500 = new TArrayD(50, shape_2012_Z2star_Qstar_qg_4500);
    break;

  case 4014: 
    std::cout << "RSGraviton_2012_D6T_ak5_GGtoGG_fat30" << std::endl;
    dv500 = new TArrayD(50,  shape_2012_D6T_RSG_gg_500);
    dv700 = new TArrayD(50,  shape_2012_D6T_RSG_gg_700);
    dv1200 = new TArrayD(50, shape_2012_D6T_RSG_gg_1200);
    dv2000 = new TArrayD(50, shape_2012_D6T_RSG_gg_2000);
    dv3500 = new TArrayD(50, shape_2012_D6T_RSG_gg_3500);
    dv4500 = new TArrayD(50, shape_2012_D6T_RSG_gg_4500);
    break;
  case 4015:   
    std::cout << "RSGraviton_2012_D6T_ak5_QQtoQQ_fat30" << std::endl;
    dv500 = new TArrayD(50,  shape_2012_D6T_RSG_qq_500);
    dv700 = new TArrayD(50,  shape_2012_D6T_RSG_qq_700);
    dv1200 = new TArrayD(50, shape_2012_D6T_RSG_qq_1200);
    dv2000 = new TArrayD(50, shape_2012_D6T_RSG_qq_2000);
    dv3500 = new TArrayD(50, shape_2012_D6T_RSG_qq_3500);
    dv4500 = new TArrayD(50, shape_2012_D6T_RSG_qq_4500);
    break;
  case 4016:   
    std::cout << "Qstar_2012_D6T_ak5_fat30" << std::endl; 
    dv500 = new TArrayD(50,  shape_2012_D6T_Qstar_qg_500);
    dv700 = new TArrayD(50,  shape_2012_D6T_Qstar_qg_700);
    dv1200 = new TArrayD(50, shape_2012_D6T_Qstar_qg_1200);
    dv2000 = new TArrayD(50, shape_2012_D6T_Qstar_qg_2000);
    dv3500 = new TArrayD(50, shape_2012_D6T_Qstar_qg_3500);
    dv4500 = new TArrayD(50, shape_2012_D6T_Qstar_qg_4500);
    break;


  default:
    std::cout << "Nothing would crash" << std::endl; 
    break;
  }

  vy->Clear();
  mqstar.clear();

  if (iResonance < 1000 && iResonance > 210 || (iResonance < 200)){

    mqstar.push_back(500.);  mqstar.push_back(700.); mqstar.push_back(1200.); 
    mqstar.push_back(2000.); mqstar.push_back(3500.); mqstar.push_back(4000.);
    
    vy->Add((TObject*) dv500); 
    vy->Add((TObject*) dv700); vy->Add((TObject*) dv1200); vy->Add((TObject*) dv2000); 
    vy->Add((TObject*) dv3500); vy->Add((TObject*) dv4000);

  } 
  else if (iResonance > 200 && iResonance < 210){

    mqstar.push_back(500.); mqstar.push_back(750.); mqstar.push_back(1000.); 
    mqstar.push_back(1250.); mqstar.push_back(1500.); 

    vy->Add((TObject*) dv500); vy->Add((TObject*) dv750); vy->Add((TObject*) dv1000);
    vy->Add((TObject*) dv1250); vy->Add((TObject*) dv1500);


  }
  else if (iResonance > 1000 && iResonance < 1011){
    
    mqstar.push_back(1000.); mqstar.push_back(2000.); mqstar.push_back(3000.); 
    mqstar.push_back(4000.); mqstar.push_back(5000.); 

    vy->Add((TObject*) dv1000); vy->Add((TObject*) dv2000); vy->Add((TObject*) dv3000);
    vy->Add((TObject*) dv4000); vy->Add((TObject*) dv5000);
  }
  else if (iResonance > 1100 && iResonance < 2000){
    
    for (unsigned int k = 0; k < vmBH.size(); k++){
      mqstar.push_back(vmBH[k]);
      vy->Add((TObject*) vyBH->At(k));
    }

  }

  else if (iResonance > 2000 && iResonance < 2010){
    
    mqstar.push_back(750.);  mqstar.push_back(1500.);   mqstar.push_back(3000.); 
    vy->Add((TObject*) dv750); vy->Add((TObject*) dv1500); vy->Add((TObject*) dv3000);
  }
  else if (iResonance > 2010 && iResonance < 3000){
    
    mqstar.push_back(1000.);  mqstar.push_back(1500.);  mqstar.push_back(2000.);  mqstar.push_back(3000.); 
    vy->Add((TObject*) dv1000); vy->Add((TObject*) dv1500); vy->Add((TObject*) dv2000); vy->Add((TObject*) dv3000);
  }

  else if (iResonance > 3000 && iResonance < 4000){
    
    mqstar.push_back(1000.); mqstar.push_back(1500.); mqstar.push_back(2000.); 
    mqstar.push_back(2500.); mqstar.push_back(3000.); 

    vy->Add((TObject*) dv1000); vy->Add((TObject*) dv1500); vy->Add((TObject*) dv2000);
    vy->Add((TObject*) dv2500); vy->Add((TObject*) dv3000);
  }


  else if (iResonance > 4000 && iResonance < 5000){

    mqstar.push_back(500.);  mqstar.push_back(700.); mqstar.push_back(1200.); 
    mqstar.push_back(2000.); mqstar.push_back(3500.); mqstar.push_back(4500.);
    
    vy->Add((TObject*) dv500); 
    vy->Add((TObject*) dv700); vy->Add((TObject*) dv1200); vy->Add((TObject*) dv2000); 
    vy->Add((TObject*) dv3500); vy->Add((TObject*) dv4500);

  } 

  for (unsigned int bin = 0; bin < mqstar.size(); bin++){
    double sum = 0;
    for (int k = 0; k < 50; k++){
      sum += ((TArrayD*) vy->At(bin))->GetAt(k);
    }
    for (unsigned int k = 0; k < 50; k++){
      double val = ((TArrayD*) vy->At(bin))->GetAt(k);
      ((TArrayD*) vy->At(bin))->AddAt(val/sum, k);
    }
  }


  setArray(mass);

}


void setArray (double mass){ 

  for(unsigned int ind=0;ind<nMassBins; ind++){
    double bin_width = -1;		 
    double peak_low = 0.31;
    double peak_high = 1.27;
    double mjj = (massBoundaries[ind]+massBoundaries[ind+1])/2;
    //	  cout<<ind<<"\t "<<mjj<<"\t "<<peak_low*mass<<endl;
    //if (mjj<0.3*mass || mjj>1.3*mass) {
    if (mjj<peak_low*mass || mjj>peak_high*mass) {
      FoundQstarBinnedProb[ind] = 0.;
      // Create a vector and fill it with variable x bins according to entered mass value
    }
    else {
      for(int i=0;i<103; i++){
	massnew[i] = massBoundaries[i]/mass;
	if (massBoundaries[i]<=mjj && massBoundaries[i+1]>=mjj) 
	  bin_width = binwidth[i];
	if (massnew[i]<=1.32 && massnew[i]>=0.28){ // x distribution is from peak_low to peak_high
	  //if (massnew[i]<=peak_high && massnew[i]>=peak_low){ // x distribution is from peak_low to peak_high
	  v.push_back(massnew[i]);
	}
      }
	
      const unsigned int s = v.size();
	
      // Definition of arrays with variable bins 
      double bins[1000]; // variable bins for x distribution
      double m[1000]; // variable mass bins for dijet mass distribution
      double dndm[1000];
      double prob[1000];
	
	
      // Fill the bin values to array
      for(unsigned int j=0; j<v.size(); j++){
	bins[j] = v[j];
	m[j] = v[j] * mass;
      }
	
      // Definition of histograms
      TH1F* h_new2 = new TH1F("h_new2","with variale bins2",s-1 , m); // Histogram for dijet mass distribution with variable mass bins

      for (unsigned int mBin = 0 ; mBin < mqstar.size(); mBin++){
	
	if ( (mBin == 0 && mass < mqstar[mBin]) || 
	     (mBin == mqstar.size()-1 && mass > mqstar[mBin]) || 
	     (TMath::Abs(mass - mqstar[mBin]) < 1e-5) ) {
	  for(unsigned int k=0; k<n; k++){
	    x[k] = bincenter[k];
	    y[k] = ((TArrayD*) vy->At(mBin))->GetAt(k);}
	  break;
	}
	
      }
	
      // Calculate and create new x distribution with fixed bins at entered mass value which is between 0.5 TeV and 0.7 TeV. 
      for (unsigned int mBin = 0 ; mBin < mqstar.size()-1; mBin++){

	if(mass > mqstar[mBin] && mass < mqstar[mBin+1]){
	  for(unsigned int k=0; k<n; k++){
	    double bincont1 = ((TArrayD*) vy->At(mBin))->GetAt(k);
	    double bincont2 = ((TArrayD*) vy->At(mBin+1))->GetAt(k);
	    double Mjj1 = mqstar[mBin];
	    double Mjj2 = mqstar[mBin+1];
	    double Mq = mass;
	    double norm = (Mq - Mjj1)/(Mjj2 - Mjj1);
	    double eff = bincont2 - bincont1;
	    double neff = eff * norm;
	    double mqstar1 = bincont1 + neff;
	    y[k] = mqstar1;
	    x[k] = bincenter[k];}
	}
      }	

      // Interpolation tecnique is used to convert distribution in x to distribution in dijet mass with variable bins
      ROOT::Math::Interpolator inter(n, ROOT::Math::Interpolation::kCSPLINE); // If CSPLINE is not valid, please use kCSPLINE
      inter.SetData(n, x, y);
      
      // Generate the new distribution in x with variable bins
      for(unsigned int t=0; t<n; t++)
	f[t] = inter.Eval(x[t]);
      
      //  int bin_number = h_new->GetNbinsX();
      for(unsigned int z=0; z<s; z++){
	double bin = 0;
	if(v[z]>peak_low && v[z]<peak_high && v[z+1]>peak_low && v[z+1]<peak_high)
	  bin = inter.Integ(v[z], v[z+1]); 
	
	dndm[z] = bin;
	h_new2->SetBinContent(z+1,bin); // histogram in dijet mass distribution with variable bins
      }
      
      v.clear();
      
      double integ = h_new2->Integral();
      h_new2->Delete();
      
      for(unsigned int p=0; p<s; p++){
	double nor = dndm[p] / integ;
	prob[p] = nor;
	if(m[p]<mjj && m[p+1]>=mjj){
	  FoundQstarBinnedProb[ind] = prob[p] / bin_width;	
	  ///cout << "bin_width=" << bin_width << endl;
	}
      }
    }
    //	 cout<<ind<<"\t mjj: "<<mjj<<"\t prob: "<<FoundQstarBinnedProb[ind]<<endl;
  }	
}


// This gets the qstar binned probability faster than the original rountine
double FastQstarBinnedProb(double mjj )
{
  int bin=0;
  int binFound=0;
  for(unsigned int i=0;i<nMassBins && binFound==0; i++){
    if(massBoundaries[i+1]>mjj){
      binFound=1;
      bin=i;
    }
  }
  return FoundQstarBinnedProb[bin];
}

