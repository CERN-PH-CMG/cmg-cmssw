#ifndef %(formatguard)s
#define %(formatguard)s

#include "DataFormats/Candidate/interface/Candidate.h"

#include "AnalysisDataFormats/CMGTools/interface/TriBool.h"
#include "AnalysisDataFormats/CMGTools/interface/UnSet.h"

#include "AnalysisDataFormats/CMGTools/interface/AbstractPhysicsObject.h"
#include "AnalysisDataFormats/CMGTools/interface/PhysicsObject.h"

#include <vector>

namespace %(namespace)s
{

//forward def needed
class %(objectname)s;
class %(factoryname)s;

class %(objectname)s : public %(baseclass)s{
public:
	
	%(objectname)s(){
	}
	%(objectname)s(const %(inputtype)s& o):
		%(baseclassconstructor)s,
		isGlobal_(cmg::unset(cmg::TriBool())){
		}
	virtual ~%(objectname)s(){
	}
	
	cmg::TriBool isGlobal() const{
		return isGlobal_;
	}
	
	friend class %(namespace)s::%(factoryname)s;
	
private:
	//for example: Use instead of bool
	cmg::TriBool isGlobal_;

};

}

#endif /*%(formatguard)s*/