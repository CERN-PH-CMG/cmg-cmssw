[CRAB]

jobtype = cmssw
#use_server =  1
scheduler = glite

[CMSSW]
#/MinimumBias/Commissioning10-May6thPDSkim2_SD_JetMETTau-v1/RECO 
#datasetpath=/MinimumBias/Commissioning10-SD_JetMETTau-Jun9thSkim_v1/RECO

# data - should use 37 reprocessing!
datasetpath=/JetMETTau/Run2010A-Jul16thReReco-v1/RECO

### The ParameterSet you want to use
pset=patTuple_DiJetSkim_cfg.py
# pset=localCopy_cfg.py

### Splitting parameters
#total_number_of_events=-1
#total_number_of_events=200
# events_per_job = 10000
#number_of_jobs = 100
#total_number_of_events=-1
#events_per_job = 5000

# lumis_per_job = 50
lumis_per_job = 1

#lumi_mask=json_July16.txt
lumi_mask=Cert_132440-141961_7TeV_StreamExpress_Collisions10_JSON.txt
#Cert_132440-137028_7TeV_June9thReReco_Collisions10_CMSSWConfig_v2.txt

total_number_of_lumis = -1

### The output files (comma separated list)
#output_file = display.root
output_file = patTuple_DiJetSkim_.root,strangeEvents_.root
# output_file = RECO.root

[USER]

### OUTPUT files Management
##  output back into UI
return_data = 0

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /full/path/Name_of_Directory

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 1

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE 
storage_path=/srm/managerv2?SFN=/castor/cern.ch/
### directory or tree of directory under the mounpoint 
user_remote_dir = user/c/cbern/cmst3/SusyJetMET/


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
#publish_data_name = name_you_prefer
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet 

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[GRID]
#
## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
#se_black_list = T0,T1,T2_AT_Vienna,T2_FR_GRIF_IRFU,T2_US_UCSD,T2_HU_Budapest
se_black_list = T0,T1,T2_IN_TIFR

## By ComputingElement
ce_black_list = T2_US_Wisconsin,T2_US_Florida
#ce_white_list =

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

