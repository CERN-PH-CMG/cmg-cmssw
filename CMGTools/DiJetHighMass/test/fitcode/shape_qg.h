
 double y500[50]= {146, 172, 193, 193, 200, 271, 286, 331, 375, 395, 477, 543, 613, 629, 769, 853, 908, 1033, 1123, 1265, 1391, 1474, 1522, 1657, 1821, 1880, 2076, 2135, 2478, 2764, 3100, 3376, 3592, 3832, 3812, 3430, 3045, 2493, 1954, 1417, 1083, 764, 609, 439, 381, 311, 281, 251, 222, 192};


  double y700[50] = {172, 195, 202, 247, 249, 334, 368, 403, 479, 522, 630, 652, 733, 827, 929, 1067, 1195, 1377, 1482, 1605, 1764, 1859, 2055, 2092, 2213, 2441, 2517, 2887, 3189, 3598, 4070, 4403, 4878, 5220, 4993, 4577, 3687, 3053, 2198, 1493, 1034, 734, 541, 444, 359, 314, 268, 238, 211, 185};

   double y1200[50] = {168, 183, 233, 239, 280, 311, 334, 410, 460, 508, 581, 643, 723, 806, 947, 986, 1162, 1328, 1490, 1513, 1661, 1819, 1951, 1917, 2074, 2281, 2400, 2780, 2990, 3386, 3926, 4668, 5247, 5685, 5452, 4709, 3660, 2436, 1633, 958, 643, 470, 349, 284, 223, 242, 173, 157, 136, 97};


   double y2000[50] = {147, 189, 199, 241, 248, 286, 328, 313, 390, 420, 427, 556, 638, 684, 746, 856, 965, 1095, 1233, 1296, 1437, 1489, 1543, 1677, 1654, 1802, 2033, 2172, 2487, 2857, 3265, 3973, 4542, 4996, 4770, 3921, 2751, 1601, 961, 563, 355, 239, 182, 145, 117, 88, 81, 64, 39, 35};

   double y3500[50] = { 559, 546, 576, 633, 711, 693, 698, 767, 827, 813, 930, 951, 987, 1068, 1129, 1139, 1262, 1312, 1422, 1499, 1547, 1588, 1708, 1678, 1803, 1768, 1894, 2218, 2481, 2733, 3138, 3742, 4484, 4626, 4130, 2801, 1605, 735, 336, 198, 99, 81, 46, 34, 17, 14, 14, 7, 6, 4};




double ZBBar_500_withMuons_lowMassCut_ak5_lowMass_pf [50] ={0, 0, 0, 0, 0, 199, 190, 201, 243, 285, 299, 302, 372, 397, 436, 464, 583, 598, 634, 661, 726, 821, 927, 924, 1043, 1029, 1220, 1212, 1382, 1436, 1430, 1454, 1566, 1443, 1222, 1010, 786, 527, 333, 209, 136, 75, 69, 66, 39, 51, 34, 35, 39, 23};


double ZBBar_500_withMuons_lowMassCut_ak5_lowMass_fat [50] ={0, 0, 0, 0, 0, 127, 130, 154, 161, 189, 215, 196, 215, 230, 290, 306, 313, 359, 382, 452, 423, 549, 609, 617, 735, 777, 938, 1017, 1178, 1305, 1428, 1539, 1704, 1710, 1649, 1539, 1300, 1067, 810, 596, 427, 319, 255, 223, 157, 143, 102, 111, 90, 62};


double ZBBar_500_withMuons_lowMassCut_ak5_lowMass_mu10_fat [50] ={0, 0, 0, 0, 0, 18, 14, 29, 20, 34, 35, 33, 38, 37, 50, 60, 74, 88, 96, 120, 123, 165, 174, 198, 223, 246, 296, 288, 349, 339, 396, 346, 396, 322, 276, 260, 217, 173, 127, 71, 66, 53, 43, 34, 30, 28, 18, 18, 10, 6};


double ZBBar_700_withMuons_lowMassCut_ak5_lowMass_pf [50] ={150, 107, 152, 148, 147, 177, 231, 187, 252, 267, 254, 345, 345, 409, 458, 573, 533, 582, 649, 728, 817, 833, 883, 920, 1057, 1052, 1104, 1221, 1341, 1470, 1473, 1633, 1570, 1482, 1320, 954, 650, 436, 289, 194, 129, 87, 59, 44, 40, 28, 37, 21, 25, 24};


double ZBBar_700_withMuons_lowMassCut_ak5_lowMass_fat [50] ={120, 90, 118, 115, 117, 145, 140, 134, 178, 175, 204, 196, 204, 253, 295, 322, 359, 352, 399, 458, 521, 574, 564, 635, 814, 790, 882, 1060, 1180, 1368, 1427, 1697, 1754, 1861, 1817, 1652, 1176, 952, 656, 482, 355, 277, 225, 152, 146, 107, 87, 92, 45, 55};


double ZBBar_700_withMuons_lowMassCut_ak5_lowMass_mu10_fat [50] ={12, 14, 17, 15, 28, 22, 23, 23, 30, 35, 33, 28, 45, 59, 67, 63, 83, 85, 140, 129, 146, 162, 165, 209, 259, 248, 295, 337, 386, 419, 391, 447, 429, 419, 363, 315, 200, 144, 111, 71, 47, 46, 43, 31, 30, 22, 15, 12, 7, 11};


double ZBBar_1200_withMuons_lowMassCut_ak5_lowMass_pf [50] ={139, 127, 131, 146, 117, 154, 169, 182, 199, 205, 212, 241, 270, 349, 342, 381, 404, 462, 519, 538, 579, 621, 671, 727, 758, 811, 851, 976, 973, 1066, 1152, 1181, 1237, 1188, 953, 712, 463, 267, 156, 88, 69, 32, 23, 19, 15, 11, 14, 9, 9, 4};


double ZBBar_1200_withMuons_lowMassCut_ak5_lowMass_fat [50] ={98, 100, 100, 110, 124, 109, 116, 157, 152, 163, 143, 165, 191, 203, 217, 216, 292, 298, 325, 351, 361, 437, 507, 537, 532, 657, 713, 822, 923, 926, 1194, 1268, 1463, 1486, 1420, 1199, 942, 601, 375, 292, 171, 126, 108, 61, 56, 55, 27, 27, 23, 23};


double ZBBar_1200_withMuons_lowMassCut_ak5_lowMass_mu10_fat [50] ={22, 19, 16, 21, 15, 25, 17, 37, 31, 34, 34, 31, 51, 57, 50, 67, 79, 84, 109, 106, 121, 156, 176, 174, 179, 234, 248, 267, 302, 297, 348, 328, 370, 328, 265, 222, 146, 112, 59, 66, 33, 20, 20, 10, 12, 13, 4, 8, 5, 3};


double ZBBar_2000_withMuons_lowMassCut_ak5_lowMass_pf [50] ={224, 220, 223, 253, 227, 230, 231, 263, 229, 262, 282, 307, 344, 350, 342, 410, 435, 466, 477, 543, 565, 580, 664, 687, 732, 766, 823, 898, 967, 1008, 1047, 1159, 1159, 1060, 894, 594, 354, 199, 111, 56, 30, 23, 14, 5, 5, 5, 7, 2, 4, 1};


double ZBBar_2000_withMuons_lowMassCut_ak5_lowMass_fat [50] ={241, 218, 222, 205, 234, 193, 222, 223, 189, 221, 204, 225, 244, 279, 274, 294, 312, 304, 352, 357, 428, 399, 498, 538, 626, 590, 699, 769, 898, 1011, 1118, 1263, 1378, 1394, 1352, 1097, 686, 467, 285, 166, 116, 82, 49, 38, 30, 19, 10, 9, 8, 9};


double ZBBar_2000_withMuons_lowMassCut_ak5_lowMass_mu10_fat [50] ={60, 47, 60, 48, 54, 44, 46, 65, 50, 55, 49, 56, 64, 51, 67, 87, 88, 91, 118, 122, 116, 123, 142, 161, 200, 186, 216, 239, 284, 298, 356, 325, 322, 253, 223, 188, 107, 66, 55, 28, 24, 9, 6, 10, 7, 5, 1, 1, 0, 0};


double ZBBar_3500_withMuons_lowMassCut_ak5_lowMass_pf [50] ={229, 201, 131, 126, 125, 99, 99, 81, 75, 56, 57, 53, 39, 42, 37, 35, 51, 40, 33, 39, 32, 34, 36, 39, 38, 38, 41, 35, 35, 37, 53, 46, 58, 34, 30, 27, 15, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0};


double ZBBar_3500_withMuons_lowMassCut_ak5_lowMass_fat [50] ={246, 233, 170, 119, 138, 114, 117, 71, 80, 69, 66, 54, 46, 41, 42, 33, 50, 43, 37, 33, 34, 40, 27, 28, 34, 32, 48, 40, 40, 36, 36, 55, 66, 62, 48, 36, 33, 11, 8, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0};


double ZBBar_3500_withMuons_lowMassCut_ak5_lowMass_mu10_fat [50] ={68, 65, 36, 29, 37, 31, 29, 20, 15, 16, 9, 10, 9, 8, 14, 7, 12, 12, 6, 5, 6, 12, 8, 9, 9, 6, 10, 12, 9, 8, 5, 8, 8, 14, 9, 9, 4, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0};


TObjArray* vy = new TObjArray(5);

TObjArray* vy_den = new TObjArray(5);

vector <double> effic;

   double bincenter[50]={
  0.31,  0.33,  0.35,  0.37,  0.39,  0.41,  0.43,  0.45,  0.47,  0.49,
  0.51,  0.53,  0.55,  0.57,  0.59,  0.61,  0.63,  0.65,  0.67,  0.69,
  0.71,  0.73,  0.75,  0.77,  0.79,  0.81,  0.83,  0.85,  0.87,  0.89,
  0.91,  0.93,  0.95,  0.97,  0.99,  1.01,  1.03,  1.05,  1.07,  1.09,
  1.11,  1.13,  1.15,  1.17,  1.19,  1.21,  1.23,  1.25,  1.27,  1.29};

 
  std::vector<double> v;

  double mqstar[5] = {500., 700., 1200., 2000., 3500.};

  const int nMassBins = 103;
  double massBoundaries[nMassBins+1] = {1, 3, 6, 10, 16, 23, 31, 40, 50, 61, 74, 88, 103, 119, 137, 156, 176, 197, 220, 244, 270, 296, 325,
  354, 386, 419, 453, 489, 526, 565, 606, 649, 693, 740, 788, 838, 890, 944, 1000, 1058, 1118, 1181, 1246, 1313, 1383, 1455, 1530, 1607, 1687,
  1770, 1856, 1945, 2037, 2132, 2231, 2332, 2438, 2546, 2659, 2775, 2895, 3019, 3147, 3279, 3416, 3558, 3704, 3854, 4010, 4171, 4337, 4509,
  4686, 4869, 5058, 5253, 5455, 5663, 5877, 6099, 6328, 6564, 6808, 7060, 7320, 7589, 7866, 8152, 8447, 8752, 9067, 9391, 9726, 10072, 10430, 
  10798, 11179, 11571, 11977, 12395, 12827, 13272, 13732, 14000};

  double binwidth[nMassBins+1] = {2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 26, 29, 29, 32, 33, 34, 36, 37, 39, 41, 43, 
 44, 47, 48, 50, 52, 54, 56, 58, 60, 63, 65, 67, 70, 72, 75, 77, 80, 83, 86, 89, 92, 95, 99, 101, 106, 108, 113, 116, 120, 124, 128, 132, 137, 142, 146,
 150, 156, 161, 166, 172, 177, 183, 189, 195, 202, 208, 214, 222, 229, 236, 244, 252, 260, 269, 277, 286, 295, 305, 315, 324, 335, 346, 358, 368, 381, 
 392, 406, 418, 432, 445, 460, 268};

  double massnew[nMassBins+1];

  const unsigned int n = 50;
  double x[n];
  double y[n];
  double f[n];

